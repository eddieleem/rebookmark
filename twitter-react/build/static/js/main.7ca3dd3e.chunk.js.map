{"version":3,"sources":["App.js","components/MainStyle.js","components/TweetWriterStyle.js","components/TweetText.js","components/SpecialTextField.js","components/TweetWriter.js","components/TweetStyle.js","components/TweetDialog.js","components/Identity.js","components/ListDialog.js","components/Tweet.js","components/Home.js","components/Messages.js","components/ExploreStyle.js","components/Explore.js","components/NotificationsStyle.js","components/Notification.js","components/Notifications.js","components/Bookmarks.js","components/ProfileStyle.js","components/LogsStyle.js","components/Log.js","components/Logs.js","components/FollowDialog.js","components/EditProfileStyle.js","components/EditProfile.js","components/Profile.js","components/PopHashtagListStyle.js","components/PopHashtag.js","components/PopHashtagList.js","components/ProfileMenu.js","components/TweetDetail.js","components/Suggestion.js","components/Main.js","components/AuthStyle.js","components/SignIn.js","components/SignUp.js","components/Auth.js","redux/reducers.js","redux/store.js","index.js","redux/stateUtils.js","redux/actions.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","hot","module","connect","state","userState","user","dispatch","logged","isStatePresent","responsiveFontSizes","className","exact","path","to","drawerWidth","MainStyle","makeStyles","root","minHeight","padding","margin","display","backgroundImage","backgroundSize","backgroundAttachment","backgroundRepeat","backgroundPosition","drawer","breakpoints","up","width","flexShrink","appBar","backgroundColor","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","marginTop","marginBottom","flexGrow","timeline","tweetButton","borderRadius","sideMenu","height","TweetWriterStyle","paddingTop","paddingLeft","paddingRight","actionsLayout","field","sendButton","URL_REGEX","HASHTAG_REGEX","HANDLER_REGEX","PURE","mapEach","value","level","length","space","result","match","slice","index","test","Link","onClick","event","stopPropagation","color","href","TweetText","textStyle","split","map","each","trim","second","classes","textInput","fontSize","lineHeight","caretColor","zIndex","tweetText","position","top","textInputLayout","SpecialTextField","textRef","style","useState","text","setText","TextField","placeholder","fullWidth","multiline","required","rows","inputRef","onChange","ev","target","inputProps","maxLength","createState","createTweet","tweet","fallback","shit","parent","setDialogClose","useRef","media","setMedia","mediaPrev","setMediaPrev","Grid","container","item","xs","md","Avatar","src","getUserProfileImg","profile_picture","alt","username","alignItems","justify","IconButton","component","file","files","reader","FileReader","onload","ev1","readAsDataURL","id","type","accept","hidden","Gif","Poll","Schedule","sm","lg","Button","variant","current","disableElevation","isStateLoading","LinearProgress","Divider","TweetStyle","tweetHeader","name","cursor","date","tweetActions","actionText","retweetStyle","likeStyle","bookmarkStyle","list","TweetDialog","open","setOpen","useTheme","fullScreen","useMediaQuery","down","handleClose","Dialog","maxWidth","onClose","aria-labelledby","DialogTitle","DialogContent","IdentityStyle","button","infoSection","Identity","closeDialog","identity","profileImg","Card","square","CardActionArea","direction","Typography","size","is_following","bio","TabPanel","props","children","other","role","Box","p","ListDialog","dialogSelectedTab","setDialogSelectedTab","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","label","axis","dir","i","DialogActions","autoFocus","getNameBP","getTopDateVisibility","actionResult","tweetAction","likeTweet","unlikeTweet","deleteLike","retweet","deleteRetweet","deleteTweet","loc","getProfile","token","profilePic","deleteDialogOpen","setDeleteDialogOpen","openLikeDialog","setOpenLikeDialog","openRetweetDialog","setOpenRetweetDialog","url","useRouteMatch","liked","retweeted","likes_count","retweets_count","myTweet","owner","like","commentCount","comments","comments_count","getCommentsCount","likesCount","retweetsCount","commentDialogOpen","setCommentDialogOpen","indexOf","preventDefault","onMouseDown","BASE_URL","time","UILink","Comment","undefined","likes","retweets","disableBackdropClick","disableEscapeKeyDown","getTimeline","useEffect","console","log","Paper","tweets","Messages","ExploreStyle","header","fontWeight","borderStyle","borderWidth","borderColor","search","shape","fade","common","white","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","searchState","searchQuery","query","URLSearchParams","useLocation","get","setTextInput","startsWith","AppBar","Toolbar","InputBase","e","onKeyPress","code","input","t","users","u","NotificationsStyle","notification","paddingBottom","icon","profilePictures","picture","visibility","sourceName","getT","getTweet","s","n","unread","avatarURLs","source","blueShade","srcName","mode","regex","toString","RegExp","typeMap","remainingText","notifications","getNotifications","notificationList","events","Bookmarks","ProfileStyle","image","borderTopLeftRadius","borderTopRightRadius","profileImage","left","editButton","userName","bioInfoLayout","bioInfo","textDecoration","bioInfoIcon","typography","body1","invis","LogsStyle","Log","targetName","Logs","l","a11yProps","FollowDialog","followListState","onChangeIndex","followings","followers","EditProfileStyle","profile","addHeaderIcon","deleteIcon","addProfileIcon","close","edit","updateUserProfile","newProfile","updateProfile","bioInput","setBio","nameInput","setName","setProfilePic","headerPic","setHeaderPic","profilePicPrev","setProfilePicPrev","header_picture","headerPicPrev","setHeaderPicPrev","np","profilePicture","CardMedia","defaultValue","getFollowersCount","profileState","followList","getTweets","logs","getUserProfile","getFollowList","followUser","follow","unfollowUser","unfollow","getLogs","useParams","openFollowDialog","setOpenFollowDialog","openEditDialog","setOpenEditDialog","selectedTab","setSelectedTab","userProfile","handleFollow","PopHashtagListStyle","title","hashtag","PopHashtag","elevation","count","trendsState","trends","getTrends","profileMenuLinks","profileMenuLayout","profileMenuActionArea","flexDirection","profileMenuTitle","logout","logoutUser","React","profileMenuAnchor","setProfileMenuAnchor","handleProfileMenuClose","which","currentTarget","anchorEl","keepMounted","Boolean","MenuItem","TweetDetailStyle","commentTitle","tweetState","likeRetTweet","getTweetById","parents","SuggestionStyle","suggestion","getSuggestion","suggestionList","loginAddress","menu","notLogged","icons","Home","Explore","Notifications","Message","Bookmark","READ_COUNT","TOTAL_COUNT","window","setInterval","mobileOpen","setMobileOpen","handleDrawerToggle","openTweetDialog","setOpenTweetDialog","List","ListItem","toLowerCase","ListItemIcon","Badge","badgeContent","ListItemText","document","body","CssBaseline","edge","Menu","noWrap","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","xl","AuthStyle","grey","avatar","form","submit","progress","signinUser","signin","emailInput","setEmailInput","passwordInput","setPasswordInput","onSubmit","email","password","noValidate","autoComplete","FormControlLabel","control","Checkbox","signupUser","signup","fNameInput","setFName","lNameInput","setLName","usernameInput","setUsername","setEmail","setPassword","isStateFailed","dialogOpen","setDialogOpen","handleDialogClose","Container","firstName","lastName","inputMode","aria-describedby","DialogContentText","createDefault","STATE_NULL","initUser","initProfile","initCreateTweet","initTimeline","initDeleteTweet","initGetTweet","initLikeRetTweet","generalReducer","initState","action","types","payload","STATE_LOADING","STATE_SUCCESS","reducers","combineReducers","SIGNUP_INIT","SIGNUP_FAIL","SIGNUP_SUCCESS","SIGNIN_INIT","SIGNIN_SUCCESS","SIGNIN_FAIL","LOGOUT","CREATE_TWEET_INIT","CREATE_TWEET_SUCCESS","CREATE_TWEET_FAIL","GET_PROFILE_INIT","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","timelineState","TIMELINE_INIT","TIMELINE_SUCCESS","TIMELINE_FAIL","tweetsState","GET_TWEETS_INIT","GET_TWEETS_SUCCESS","GET_TWEETS_FAIL","deleteTweetState","DEL_TWEET_INIT","DEL_TWEET_SUCCESS","DEL_TWEET_FAIL","getTweetState","GET_TWEET_INIT","GET_TWEET_SUCCESS","GET_TWEET_FAIL","likeRetTweetState","GET_LIKE_RET_TWEET_INIT","GET_LIKE_RET_TWEET_SUCCESS","GET_LIKE_RET_TWEET_FAIL","TRENDS_INIT","TRENDS_SUCCESS","TRENDS_FAIL","tweetActionsReducer","TWEET_ACTION_INIT","TWEET_ACTION_SUCCESS","TWEET_ACTION_FAIL","updateProfileState","UPDATE_PROFILE_INIT","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","updateUser","updateUserState","UPDATE_USER_INIT","UPDATE_USER_SUCCESS","UPDATE_USER_FAIL","followState","FOLLOW_INIT","FOLLOW_SUCCESS","FOLLOW_FAIL","unfollowState","UNFOLLOW_INIT","UNFOLLOW_SUCCESS","UNFOLLOW_FAIL","FOLLOW_LIST_INIT","FOLLOW_LIST_SUCCESS","FOLLOW_LIST_FAIL","logsState","LOGS_INIT","LOGS_SUCCESS","LOGS_FAIL","SEARCH_INIT","SEARCH_SUCCESS","SEARCH_FAIL","notificationsState","NOTIFICATIONS_INIT","NOTIFICATIONS_SUCCESS","NOTIFICATIONS_FAIL","suggestionState","SUGGESTION_INIT","SUGGESTION_SUCCESS","SUGGESTION_FAIL","persistConfig","key","blacklist","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","devTool","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","App","getElementById","createInit","createSuccess","createFail","failCode","link","getState","a","axios","baseURL","method","contentType","data","then","catch","error","printError","getErrorCode","bodyFormData","FormData","append","headers","tweetId","getLikeRetTweet","dateCode","getUserProfileSuccess","config","tweetsIds","updateProfilePic","response","status","request","message"],"mappings":"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","file":"static/js/main.7ca3dd3e.chunk.js","sourcesContent":["import {hot} from \"react-hot-loader\";\nimport React from \"react\";\nimport './App.css';\nimport Auth from \"./components/Auth\";\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport {connect} from \"react-redux\";\nimport {createMuiTheme, responsiveFontSizes, ThemeProvider} from \"@material-ui/core\";\nimport {isStatePresent} from \"./redux/stateUtils\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#010667\",\n        },\n        secondary: {\n            main: \"#88D5E7\",\n        },\n    },\n});\n\nfunction App({userState}) {\n\n    const logged = isStatePresent(userState);\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(theme)}>\n            <Router>\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path={\"/auth\"}><Redirect to={\"/auth/sign-in\"}/></Route>\n                        <Route path={\"/auth/\"}>{logged ? <Redirect to={\"/\"}/> : <Auth/>}</Route>\n                        <Route path={`/`}><Main/></Route>\n                    </Switch>\n                </div>\n            </Router>\n        </ThemeProvider>\n    );\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user\n});\n\nconst mapActionsToProp = dispatch => ({});\n\nexport default hot(module)(connect(mapStateToProp, mapActionsToProp)(App));\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst drawerWidth = 220;\n\nexport const MainStyle = makeStyles((theme) => ({\n    root: {\n        minHeight: \"100vh\",\n        padding: \"0\",\n        margin: \"0\",\n        display: 'flex',\n        backgroundImage: `url(/assets/wallpaper.jpg)`,\n        backgroundSize: \"cover\",\n        backgroundAttachment: \"fixed\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center center\"\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        backgroundColor: \"#1DA1F2\",\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        flexGrow: 1,\n    },\n    timeline:{\n        marginRight: theme.spacing(2)\n    },\n    tweetButton: {\n        backgroundColor: theme.palette.primary,\n        borderRadius: \"20px\"\n    },\n    sideMenu:{\n        height: \"100%\",\n        backgroundColor: \"#DDF3F8\"\n    }\n}));\n","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const TweetWriterStyle = makeStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n    actionsLayout: {\n        paddingTop: theme.spacing(1)\n    },\n    field: {\n        width: '100%'\n    },\n    sendButton: {\n        borderRadius: \"20px\",\n        marginBottom: theme.spacing(1)\n    },\n\n}));","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {Link} from \"@material-ui/core\";\n\nconst URL_REGEX = /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\nconst HASHTAG_REGEX = /#[\\w_]+/gi;\nconst HANDLER_REGEX = /@[\\w_]+/gi;\nconst PURE = /[^\\n\\w\\t\\f\\v@#\\.]/i;\n\nfunction mapEach(value, level) {\n    if (value.length === 1){\n        let space = level === 0 ? ' ' :  '';\n        return <a >{`${space}${value}`}</a>;\n    }\n    let result = value.match(PURE);\n    if (result !== null) {\n        return <span>\n            {mapEach(value.slice(0,result.index), 1)}\n            {mapEach(value.slice(result.index,result.index+1),1)}\n            {mapEach(value.slice(result.index+1),1)}\n        </span>;\n    } else {\n        if (HASHTAG_REGEX.test(value)) return <span>{' '}<Link display={\"inline\"} onClick={event => event.stopPropagation()} color={\"secondary\"} href={`/explore?query=${value.slice(1)}`}>{`${value}`}</Link></span>;\n        else if (HANDLER_REGEX.test(value)) return <span>{' '}<Link display={\"inline\"} onClick={event => event.stopPropagation()} color={\"secondary\"} href={`/profile/${value.slice(1)}`}>{`${value}`}</Link></span>;\n        else if (URL_REGEX.test(value)) return <span>{' '}<Link display={\"inline\"} onClick={event => event.stopPropagation()} color={\"secondary\"} href={`http://${value}`}>{`${value}`}</Link></span>;\n        else return <a>{` ${value}`}</a>;\n    }\n}\n\nexport default function TweetText({value, textStyle}) {\n\n    return (\n        <div className={textStyle}>\n            {value.split(/\\n/)\n                .map(each => (\n                    <span>\n                        {each.trim().split(/\\s/).map( second=>mapEach(second,0))}\n                        <br/>\n                    </span>\n                ))}\n        </div>\n    )\n}","import TextField from \"@material-ui/core/TextField\";\nimport React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport TweetText from \"./TweetText\";\n\nconst classes = makeStyles(() => ({\n    textInput: {\n        fontSize: \"medium\",\n        lineHeight: \"20px\",\n        color: \"transparent\",\n        caretColor: \"black\",\n        zIndex: \"1\",\n        \"&::placeholder\": {\n            color: \"#434343\"\n        }\n    },\n    tweetText: {\n        width: \"100%\",\n        position: \"absolute\",\n        top: \"5px\",\n        fontSize: \"medium\",\n        lineHeight: \"20px\",\n\n    },\n    textInputLayout: {\n        position: \"relative\",\n        zIndex: \"0\"\n    },\n\n}));\n\n\n\n\n\nexport default function SpecialTextField({textRef}) {\n    const style = classes();\n    const [text, setText] = useState(\"\");\n\n\n    const onChange = ev => {setText(ev.target.value);};\n\n    return (\n        <div className={style.textInputLayout}>\n            <TextField\n                placeholder={\"What's happening?\"}\n                fullWidth\n                multiline\n                required\n                rows={5}\n                inputRef={textRef}\n                onChange={onChange}\n                inputProps={{maxLength: 250, className: style.textInput}}\n            />\n            <TweetText value={text} textStyle={style.tweetText}/>\n        </div>\n    );\n}","import React, {useRef, useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    Image as MediaIcon,\n    Gif as GifIcon,\n    Poll as PollIcon,\n    EmojiEmotionsOutlined as EmojiIcon,\n    Schedule as ScheduleIcon\n\n} from \"@material-ui/icons\";\nimport {TweetWriterStyle} from \"./TweetWriterStyle\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SpecialTextField from \"./SpecialTextField\";\nimport {createTweet} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {getUserProfileImg, isStateLoading} from \"../redux/stateUtils\";\n\nfunction TweetWriter({userState, createState, createTweet, parent, setDialogClose, fallback, shit}) {\n    const style = TweetWriterStyle();\n    const tweetText = useRef(null);\n    const [media, setMedia] = useState(null);\n    const [mediaPrev, setMediaPrev] = useState(\"\");\n    // todo : clear output after sending tweet\n\n    const onMediaChange = ev => {\n        const file = ev.target.files[0];\n        setMedia(file);\n\n        let reader = new FileReader();\n        reader.onload = ev1 => setMediaPrev(ev1.target.result);\n        reader.readAsDataURL(file);\n    };\n\n\n    const onSend = ev => {\n        const tweet = {\n            text: tweetText.current.value,\n            media: media,\n            parent: parent\n        };\n\n        // tweetText.current.value = \"\";\n        createTweet(tweet, fallback, shit);\n        if (setDialogClose != null) setDialogClose();\n\n        setMediaPrev(\"\");\n    };\n\n    return (\n        <>\n            <Grid container className={style.root}>\n                <Grid item xs={2} md={1}><Avatar src={getUserProfileImg(userState.profile_picture)} alt={userState.username}/></Grid>\n                <Grid container xs={10} md={11}>\n                    <Grid item xs={12}><SpecialTextField textRef={tweetText}/></Grid>\n                    {mediaPrev != \"\" ? <Grid item xs={12}><img width={200} height={200} src={mediaPrev} /> </Grid>: null}\n                    <Grid container alignItems={\"center\"} justify={\"space-between\"} className={style.actionsLayout}>\n                        <Grid container xs>\n                            <Grid item><IconButton component={\"label\"}><MediaIcon/><input onChange={onMediaChange}\n                                                                                          id={\"media\"} type={\"file\"}\n                                                                                          accept={\"image/*\"}\n                                                                                          hidden/></IconButton></Grid>\n                            <Grid item><IconButton><GifIcon/></IconButton></Grid>\n                            <Grid item><IconButton><PollIcon/></IconButton></Grid>\n                            <Grid item><IconButton><EmojiIcon/></IconButton></Grid>\n                            <Grid item><IconButton><ScheduleIcon/></IconButton></Grid>\n                        </Grid>\n                        <Grid item xs={3} sm={3} md={2} lg={2}>\n                            <Button variant={\"contained\"} onClick={onSend} disableElevation color={\"secondary\"}\n                                    className={style.sendButton}>Tweet</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {isStateLoading(createState) ? <LinearProgress/> : null}\n            <Divider/>\n        </>\n    );\n}\n\nconst mapStateToProp = state => ({\n    createState: state.createTweet,\n    userState: state.user\n});\n\nconst mapActionsToProp = dispatch => ({\n    createTweet: (tweet, fallback, shit) => dispatch(createTweet(tweet, fallback, shit)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(TweetWriter);","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const TweetStyle = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(2)\n    },\n    tweetHeader: {\n        padding: theme.spacing(0,1)\n    },\n    name: {\n    },\n    id: {\n        padding: theme.spacing(1,1),\n        cursor: \"pointer\"\n    },\n    date: {\n\n    },\n    tweetActions: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n    },\n    actionText: {\n        cursor: \"pointer\"\n    },\n    retweetStyle: {\n        color: \"#228B22\",\n    },\n    likeStyle: {\n        color: \"#FF0000\"\n    },\n    bookmarkStyle: {\n      color: theme.palette.primary\n    },\n    media: {\n        width: \"200px\",\n        height: \"200px\",\n    },\n    list: {\n        paddingRight: theme.spacing(2)\n    }\n}));","import React from \"react\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TweetWriter from \"./TweetWriter\";\n\n\nexport default function TweetDialog({open,setOpen, parent, fallback, shit}) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const handleClose = () => setOpen(false);\n\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            fullWidth\n            maxWidth={\"sm\"}\n            onClose={handleClose}\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle id=\"responsive-dialog-title\">{\"Tweet\"}</DialogTitle>\n            <DialogContent>\n                <TweetWriter fallback={fallback} shit={shit} parent={parent} setDialogClose={handleClose} />\n            </DialogContent>\n        </Dialog>\n    );\n\n};","import CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {getUserProfileImg} from \"../redux/stateUtils\";\n\nconst IdentityStyle = makeStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(1),\n    },\n    button: {\n        marginTop: \"20%\",\n        borderRadius: \"20px\",\n    },\n    infoSection: {\n        marginLeft: \"10px\"\n    }\n}));\n\n\nexport default function Identity({logged = false, closeDialog, identity}) {\n    const classes = IdentityStyle();\n\n    const profileImg = identity.profile_picture === \"\" ? \"https://i.stack.imgur.com/34AD2.jpg\" : identity.profile_picture;\n\n    const onIdentityClick = ev => {\n        if (closeDialog != null)\n            closeDialog();\n    };\n\n    return (\n        <Card square>\n            <CardActionArea onClick={onIdentityClick} component={Link} to={`/profile/${identity.username}`}>\n                <Grid container className={classes.root}>\n                    <Grid item xs={2} sm={1}><Avatar src={getUserProfileImg(profileImg)}/></Grid>\n                    <Grid container xs={9} sm={10} direction={\"column\"} className={classes.infoSection}>\n                        <Grid container xs={12}>\n                            <Grid item xs={9} sm={10}>\n                                <Typography>{identity.name}</Typography>\n                                <Typography>{identity.username}</Typography>\n                            </Grid>\n                            <Grid item xs={3} sm={2}>\n                                {logged ? <Button size={\"small\"} color={\"secondary\"} variant={identity.is_following ? \"contained\" : \"outlined\"}\n                                        className={classes.button} disableElevation>{identity.is_following ? \"Following\" : \"Follow\"}</Button> : null}\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}><Typography>{identity.bio}</Typography></Grid>\n                    </Grid>\n                </Grid>\n            </CardActionArea>\n            <Divider/>\n        </Card>\n    );\n\n};","import React, {useState} from \"react\";\nimport {Tab, Tabs, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Identity from \"./Identity\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\t\n\treturn (\n\t\t<div role=\"tabpanel\" hidden={value !== index} id={`full-width-tabpanel-${index}`}\n\t\t     aria-labelledby={`full-width-tab-${index}`}{...other}>\n\t\t\t{value === index && (<Box p={3}><Typography>{children}</Typography></Box>)}\n\t\t</div>\n\t);\n}\n\n\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid: `full-width-tab-${index}`,\n\t\t'aria-controls': `full-width-tabpanel-${index}`,\n\t};\n}\n\n\nfunction ListDialog({name, list, open, setOpen}) {\n\tconst theme = useTheme();\n\tconst fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\t\n\tconst [dialogSelectedTab, setDialogSelectedTab] = useState(0);\n\tconst handleDialogTabChange = (event, newValue) => setDialogSelectedTab(newValue);\n\t\n\tconst handleClose = () => setOpen(false);\n\t\n\t\n\treturn (\n\t\t<Dialog\n\t\t\tfullScreen={fullScreen}\n\t\t\topen={open}\n\t\t\tfullWidth\n\t\t\tmaxWidth={\"sm\"}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"responsive-dialog-title\">\n\t\t\t<DialogTitle id=\"responsive-dialog-title\">{\"Follow List\"}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Tabs value={dialogSelectedTab} onChange={handleDialogTabChange} indicatorColor=\"primary\"\n\t\t\t\t      textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\n\t\t\t\t\t<Tab label={name} {...a11yProps(0)} />\n\t\t\t\t</Tabs>\n\t\t\t\t<SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={dialogSelectedTab}>\n\t\t\t\t\t<TabPanel value={dialogSelectedTab} index={0} dir={theme.direction}>\n\t\t\t\t\t\t{list !== null ? list.map((each,i) => <Identity key={i} closeDialog={handleClose} identity={each}/>) : null}\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</SwipeableViews>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button autoFocus onClick={handleClose} color=\"primary\">Close</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n\t\n}\n\n\n\nexport default ListDialog;","import React, {useState} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {TweetStyle} from \"./TweetStyle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n    BarChart as StatIcon,\n    Bookmark as BookmarkFilledIcon,\n    BookmarkBorder as BookmarkIcon,\n    Comment as CommentIcon,\n    DeleteForever as DeleteIcon,\n    Favorite as LikeFilledIcon,\n    FavoriteBorder as LikeIcon,\n    Repeat as RetweetIcon\n} from '@material-ui/icons';\nimport TweetText from \"./TweetText\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport TweetDialog from \"./TweetDialog\";\nimport {\n    BASE_URL,\n    deleteLike,\n    deleteRetweet,\n    deleteTweet,\n    getProfile,\n    likeTweet,\n    retweet\n} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {isStatePresent} from \"../redux/stateUtils\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport {Link as UILink} from \"@material-ui/core\";\nimport ListDialog from \"./ListDialog\";\n\nexport const TWEET_NORMAL = 0;\nexport const TWEET_DETAIL = 1;\nexport const TWEET_REPLY = 2;\n\nconst getNameBP = (type) => type === TWEET_DETAIL ? 12 : \"auto\";\n\nconst getCommentsCount = (tweet) => tweet.comments != null ? tweet.comments.length : tweet.comments_count;\n\nconst getTopDateVisibility = (type) => type === TWEET_DETAIL ? \"none\" : \"block\";\n\nfunction Tweet({\n                   type = TWEET_NORMAL, tweet, username,\n                   actionResult, deleteTweet, userState, profilePic,\n                   likeTweet, unlikeTweet, retweet, deleteRetweet, list, getProfile, loc, fallback, shit\n               }) {\n    const classes = TweetStyle();\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [openLikeDialog, setOpenLikeDialog] = useState(false);\n    const [openRetweetDialog, setOpenRetweetDialog] = useState(false);\n    let {url} = useRouteMatch();\n    /*\n    What does each tweet have:\n        liked? (by me),\n        likeCount\n        media,\n        owner -> bio, name, profile_picture, username\n        parents\n        retweeted? (by me),\n        retweetCount\n        text\n        time\n     */\n\n    if (isStatePresent(actionResult) && actionResult.id === tweet.id) {\n        tweet.liked = actionResult.liked;\n        tweet.retweeted = actionResult.retweeted;\n        tweet.likes_count = actionResult.likes_count;\n        tweet.retweets_count = actionResult.retweets_count;\n    }\n\n\n    const bookmarked = false;\n    const myTweet = username === tweet.owner.username;\n    const tweetText = tweet.text;\n    let like = tweet.liked;\n    let retweeted = tweet.retweeted;\n    const commentCount = getCommentsCount(tweet);\n    const likesCount = tweet.likes_count;\n    const retweetsCount = tweet.retweets_count;\n\n    const [commentDialogOpen, setCommentDialogOpen] = useState(false);\n    const onCommentHandle = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        if (isStatePresent(userState))\n            setCommentDialogOpen(true);\n    }\n\n    const onLike = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        if (like) unlikeTweet(tweet.id);\n        else likeTweet(tweet.id);\n        like = !like;\n    };\n\n    const onRetweet = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        if (retweeted) deleteRetweet(tweet.id);\n        else retweet(tweet.id);\n        retweeted = !retweeted;\n    };\n\n    const onDeleteButton = (ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        setDeleteDialogOpen(true);\n    };\n\n\n    const onDeleteCancel = ev => setDeleteDialogOpen(false);\n    const onDeleteConfirm = ev => {\n        setDeleteDialogOpen(false);\n        deleteTweet(tweet.id, loc);\n    }\n\n\n    const goHome = () => {\n        getProfile(userState.token, userState.username);\n    }\n\n    const content = (<Grid container className={classes.root}>\n        <Grid item xs={2} md={1}><Avatar\n            src={profilePic}/></Grid>\n        <Grid container className={classes.tweetHeader} xs={10} md={11} spacing={1}>\n            <Grid container xs={12} alignItems={\"center\"} justify={\"space-between\"}>\n                <Grid container item xs>\n                    <Grid item xs={getNameBP(type)}><Typography display={\"inline\"}\n                                                                className={classes.name}>{tweet.owner.name}</Typography></Grid>\n                    <Grid item><Typography display={\"inline\"} className={classes.id} onClick={goHome} component={Link}\n                                           to={`${url.slice(0, -url.indexOf('/'))}/profile/${tweet.owner.username}`}>@{tweet.owner.username}</Typography></Grid>\n                    <Grid item><Typography display={\"inline\"} style={{display: getTopDateVisibility(type)}}\n                                           className={classes.date}>{tweet.date}</Typography></Grid>\n                </Grid>\n                <Grid item xs={1}>{tweet.owner.username === userState.username ? <IconButton onClick={onDeleteButton}\n                                                                                             onMouseDown={event => event.stopPropagation()}><DeleteIcon/></IconButton> : null}</Grid>\n            </Grid>\n            <Grid item xs={12}><TweetText value={tweetText} textStyle={classes.tweetText}/></Grid>\n            {tweet.media !== \"\" ?\n                <Grid item xs={12}><img className={classes.media} src={`${BASE_URL}/${tweet.media}`}/> </Grid> : null}\n            {type === TWEET_DETAIL ? <Grid item xs={12}><Typography color={\"secondary\"}\n                                                                    variant={\"subtitle2\"}>{tweet.time}</Typography></Grid> : null}\n            <Divider/>\n            {type === TWEET_DETAIL ?\n                <Grid container xs={12}>\n                    <Typography component={UILink} onClick={() => setOpenRetweetDialog(true)}\n                                className={classes.list}>Retweets</Typography>\n                    <Typography component={UILink} onClick={() => setOpenLikeDialog(true)}\n                                className={classes.list}>Likes</Typography>\n                </Grid>\n                : null}\n            <Divider/>\n            {type === TWEET_DETAIL ? <Divider/> : null}\n            <Grid item container justify={\"space-between\"} className={classes.tweetActions} xs={12}>\n                <Grid item>\n                    <IconButton onClick={onCommentHandle} onMouseDown={event => event.stopPropagation()}><CommentIcon/></IconButton>\n                    <Typography display={\"inline\"} className={classes.actionText}>{commentCount}</Typography>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={onRetweet} onMouseDown={event => event.stopPropagation()}\n                                className={retweeted ? classes.retweetStyle : null}><RetweetIcon/></IconButton>\n                    <Typography display={\"inline\"} className={classes.actionText}>{retweetsCount}</Typography>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={onLike} onMouseDown={event => event.stopPropagation()}\n                                className={classes.likeStyle}>{like ? <LikeFilledIcon/> :\n                        <LikeIcon/>}</IconButton>\n                    <Typography display={\"inline\"} className={classes.actionText}>{likesCount}</Typography>\n                </Grid>\n                <Grid item><IconButton onClick={event => event.stopPropagation()}\n                                       onMouseDown={event => event.stopPropagation()}\n                                       className={classes.bookmarkStyle}>\n                    {bookmarked ? <BookmarkFilledIcon/> : <BookmarkIcon/>}</IconButton></Grid>\n                {myTweet ? <Grid item><IconButton><StatIcon/></IconButton></Grid> : null}\n            </Grid>\n        </Grid>\n\n    </Grid>);\n\n    return (\n        <Card square>\n            <ListDialog name={\"Likes\"} list={list !== undefined && \"likes\" in list ? list.likes : null}\n                        open={openLikeDialog} setOpen={setOpenLikeDialog}/>\n            <ListDialog name={\"Retweets\"} list={list !== undefined && \"retweets\" in list ? list.retweets : null}\n                        open={openRetweetDialog} setOpen={setOpenRetweetDialog}/>\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                maxWidth=\"xs\"\n                aria-labelledby=\"confirmation-dialog-title\"\n                open={deleteDialogOpen}>\n                <DialogTitle>Delete Tweet</DialogTitle>\n                <DialogContent>Tweet will be deleted permanently.</DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onDeleteCancel} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={onDeleteConfirm} color=\"primary\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <TweetDialog open={commentDialogOpen} setOpen={setCommentDialogOpen} parent={tweet.id} fallback={fallback}\n                         shit={shit}/>\n            {type !== TWEET_DETAIL ?\n                <CardActionArea component={Link} to={`/tweet-detail/${tweet.id}`}>{content}</CardActionArea> : content}\n            <Divider/>\n        </Card>\n    );\n\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user,\n    actionResult: state.tweetAction,\n});\n\nconst mapActionsToProp = dispatch => ({\n    likeTweet: (id) => dispatch(likeTweet(id)),\n    unlikeTweet: (id) => dispatch(deleteLike(id)),\n    retweet: (id) => dispatch(retweet(id)),\n    deleteRetweet: (id) => dispatch(deleteRetweet(id)),\n    deleteTweet: (id, loc) => dispatch(deleteTweet(id, loc)),\n    getProfile: (token, username) => dispatch(getProfile(token, username)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Tweet);","import React, {useEffect} from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TweetWriter from \"./TweetWriter\";\nimport {connect} from \"react-redux\";\nimport {getTimeline} from \"../redux/actions\";\nimport Tweet from \"./Tweet\";\nimport {getUserProfileImg, isStatePresent} from \"../redux/stateUtils\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction Home({user, timeline, getTimeline}) {\n\n\n    useEffect(() => {\n        getTimeline();\n    }, []);\n\n    console.log(timeline);\n    return (\n        <Paper>\n            <TweetWriter fallback=\"timeline\"/>\n            {isStatePresent(timeline) ? timeline.tweets.map(each => <Tweet loc={\"timeline\"} profilePic={getUserProfileImg(each.owner.profile_picture)} tweet={each} username={user.username}/>):<LinearProgress/>}\n        </Paper>\n    );\n}\n\nconst mapStateToProp = state => ({\n    user: state.user,\n    timeline: state.timeline\n});\n\nconst mapActionsToProp = dispatch => ({\n    getTimeline: () => dispatch(getTimeline()),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Home);\n\n","import React from \"react\";\n\nexport default function Messages() {\n    return (\n        <h1>Messages</h1>\n    );\n}\n\n","import {fade, makeStyles} from \"@material-ui/core\";\n\n\nexport const ExploreStyle = makeStyles((theme) => ({\n\troot: {\n\t},\n\theader: {\n\t\tborderRadius: \"15px 15px 0 0\",\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tfontSize: \"20px\",\n\t\tfontWeight: \"bold\",\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 5px 0\",\n\t\tborderColor: \"lightblue\"\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\n\t\t},\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t\twidth: 'auto',\n\t\t},\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tinputRoot: {\n\t\tcolor: 'inherit',\n\t},\n\tinputInput: {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: '12ch',\n\t\t\t'&:focus': {\n\t\t\t\twidth: '20ch',\n\t\t\t},\n\t\t},\n\t},\n}));","import React, {Fragment, useState} from \"react\";\nimport {Paper} from \"@material-ui/core\";\nimport {ExploreStyle} from \"./ExploreStyle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {search} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport Tweet from \"./Tweet\";\nimport {useLocation} from 'react-router-dom';\nimport Identity from \"./Identity\";\n\nfunction Explore({searchState, userState, searchQuery}) {\n\tconst classes = ExploreStyle();\n\tlet query = new URLSearchParams(useLocation().search).get(\"query\");\n\tconst [textInput, setTextInput] = useState(\"\");\n\n\n\tconst searchHandler = (e) => {\n\t\tif (textInput.startsWith(\"#\")) {\n\t\t\tsearchQuery(\"hashtag\", textInput.slice(1));\n\t\t} else if (textInput.startsWith(\"@\")) {\n\t\t\tsearchQuery(\"user\", textInput.slice(1));\n\t\t} else {\n\t\t\tsearchQuery(\"tweet\", textInput);\n\t\t}\n\t};\n\t\n\tconst type = () => {return textInput.startsWith('#') ? \"hashtag\" : !textInput.startsWith('@') ? \"tweet\" : null};\n\t\n\treturn (\n\t\t<Paper className={classes.root}>\n\t\t\t<Grid item className={classes.header}>Explore</Grid>\n\t\t\t<AppBar position=\"relative\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<div className={classes.search}>\n\t\t\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={e => setTextInput(e.target.value)}\n\t\t\t\t\t\t\tonKeyPress={e => e.code === \"Enter\" || e.code === \"NumpadEnter\" ? searchHandler(e) : null}\n\t\t\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinputProps={{'aria-label': 'search'}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Fragment>\n\t\t\t\t{\"tweets\" in searchState ? searchState.tweets.map(t => {\n\t\t\t\t\treturn <Tweet fallback=\"explore\" shit={{\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tquery: type() === \"hashtag\" ? textInput.slice(1) : type() === \"tweet\" ? textInput : null,\n\t\t\t\t\t}} tweet={t} username={userState.username}/>\n\t\t\t\t}) : null}\n\t\t\t\t{\"users\" in searchState ? searchState.users.map(u => {\n\t\t\t\t\treturn <Identity identity={u}/>\n\t\t\t\t}) : null}\n\t\t\t</Fragment>\n\t\t</Paper>\n\t);\n}\n\nconst mapStateToProp = state => ({\n\tuserState: state.user,\n\tsearchState: state.search\n});\n\nconst mapActionsToProp = dispatch => ({\n\tsearchQuery: (type, query) => dispatch(search(type, query)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Explore);\n\n","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const NotificationsStyle = makeStyles((theme) => ({\n\troot: {},\n\theader: {\n\t\tborderRadius: \"15px 15px 0 0\",\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tfontSize: \"20px\",\n\t\tfontWeight: \"bold\",\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 2px 0\",\n\t\tborderColor: \"lightblue\"\n\t},\n\tnotification: {\n\t\tpaddingLeft: theme.spacing(6),\n\t\tpaddingRight: theme.spacing(3),\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingBottom: theme.spacing(1),\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 1px 0\",\n\t\tborderColor: \"#a7a7a7\",\n\t},\n\ticon: {\n\t\tmarginTop: 3,\n\t\tmarginLeft: -35,\n\t\tmarginRight: 10,\n\t\theight: theme.spacing(3),\n\t\twidth: theme.spacing(3),\n\t},\n\tprofilePictures: {\n\t\tdisplay: \"flex\",\n\t\tpaddingBottom: theme.spacing(1),\n\t},\n\tpicture: {\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: theme.spacing(4),\n\t\theight: theme.spacing(4),\n\t},\n\ttext: {\n\t\tpaddingBottom: theme.spacing(0.5),\n\t},\n\ttweet: {\n\t\tcolor: \"#a0a0a0\",\n\t\tfontSize: 14,\n\t\tvisibility: 0.5\n\t},\n\tsourceName: {\n\t\tfontWeight: \"bold\",\n\t\tpaddingRight: theme.spacing(0.5)\n\t},\n}));","import Card from \"@material-ui/core/Card\";\nimport React from \"react\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {NotificationsStyle} from \"./NotificationsStyle\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n\tdeleteLike,\n\tdeleteRetweet,\n\tdeleteTweet, getProfile, getTweet,\n\tlikeTweet,\n\tretweet\n} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport Tweet from \"./Tweet\";\n\nfunction isRTL(s) {\n\tconst ltrChars = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'\n\t\t+ '\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\n\tconst rtlChars = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n\tconst rtlDirCheck = new RegExp('^[^' + ltrChars + ']*[' + rtlChars + ']');\n\t\n\treturn rtlDirCheck.test(s);\n}\n\nfunction Notification({n, userState, unread, getT}) {\n\tconst classes = NotificationsStyle();\n\t// need to change these to actual input\n\tlet {url} = useRouteMatch();\n\tconst avatarURLs = [\n\t\tn.source.profile_picture,\n\t];\n\tconst blueShade = unread;\n\tconst srcName = n.source.name;\n\tconst type = n.mode;\n\tconst regex = n.content.toString().match(new RegExp(\"Tweet (.*) at\"));\n\tconst tweetText = regex !== null ? regex[1] : \"\";\n\tconst dir = isRTL(tweetText.split(' ')[0]) ? \"rtl\" : \"ltr\";\n\tconst typeMap = {\n\t\t\"Like\": <FavoriteIcon className={classes.icon}\n\t\t                      style={{color: \"#ff0000\"}}/>,\n\t\t\"Follow\": <PersonIcon className={classes.icon}\n\t\t                      style={{color: \"#0099ff\"}}/>,\n\t\t\"Retweet\": <RepeatIcon className={classes.icon}\n\t\t                       style={{color: \"#2ae000\"}}/>,\n\t}\n\tconst remainingText = {\n\t\t\"Like\": avatarURLs.length > 1 ? <Grid item><Typography\n\t\t\tdisplay={\"inline\"}>and {avatarURLs.length - 1} others liked your\n\t\t\ttweet.</Typography></Grid> : <Grid item><Typography\n\t\t\tdisplay={\"inline\"}>liked your tweet.</Typography></Grid>,\n\t\t\"Follow\": <Grid item><Typography display={\"inline\"}>followed\n\t\t\tyou.</Typography></Grid>,\n\t\t\"Retweet\": <Grid item><Typography display={\"inline\"}>retweeted your\n\t\t\ttweet.</Typography></Grid>,\n\t}\n\t\n\tconst showTweet = () => {\n\t\tif (n !== undefined && \"tweet\" in n && n.tweet.id !== undefined && type !== \"Follow\") {\n\t\t\tgetT(n.tweet.id);\n\t\t\treturn <Tweet tweet={n.tweet} fallback=\"timeline\"/>\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<Card square className={classes.root}>\n\t\t\t<CardActionArea>\n\t\t\t\t<Grid container className={classes.notification} style={blueShade ? {backgroundColor: \"#d6edff\"} : null}>\n\t\t\t\t\t{typeMap[type]}\n\t\t\t\t\t<div className={classes.profilePictures}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tavatarURLs.map((url) => {\n\t\t\t\t\t\t\t\treturn <Avatar item src={url} className={classes.picture}/>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid container className={classes.text}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography display={\"inline\"} className={classes.sourceName}>\n\t\t\t\t\t\t\t\t{srcName}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{remainingText[type]}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid container component={Link} to={`${url.slice(0, -url.indexOf('/'))}/tweet-detail/${n.tweet.id}`} className={classes.tweet} style={{direction: dir}} onClick={showTweet}>\n\t\t\t\t\t\t{tweetText}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardActionArea>\n\t\t</Card>\n\t);\n};\n\nconst mapStateToProp = state => ({\n\tuserState: state.user,\n});\n\nconst mapActionsToProp = dispatch => ({\n\tgetT: (id) => dispatch(getTweet(id)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Notification);\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {NotificationsStyle} from \"./NotificationsStyle\";\nimport Notification from \"./Notification\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {notificationList} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {isStatePresent} from \"../redux/stateUtils\";\nimport {READ_COUNT} from \"./Main\";\n\nfunction Notifications({notifications, getNotifications}) {\n    const style = NotificationsStyle();\n\t\n\t// READ_COUNT = \"events\" in notifications ? notifications.events.length : 0;\n \n\tif (notifications.state === -1) {\n\t\t// console.log(\"getting notifs\");\n\t\t// getNotifications();\n\t}\n\t\n\tconst comeOn = () => {\n\t\t// console.log(\"i am here, \", notifications);\n\t\treturn notifications.events.map(n => <Notification n={n} unread={true}/>);\n\t}\n    \n    return (\n        <Paper className={style.root}>\n            <Grid item className={style.header}>Notifications</Grid>\n            {\n                isStatePresent(notifications) && \"events\" in notifications && notifications.events.length > 0\n\t                ? comeOn() : null\n            }\n        </Paper>\n    );\n}\n\nconst mapStateToProp = state => ({\n    notifications: state.notifications,\n});\n\nconst mapActionsToProp = dispatch => ({\n    getNotifications: () => dispatch(notificationList()),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Notifications);\n\n","import React from \"react\";\n\nexport default function Bookmarks() {\n    return (\n        <h1>Bookmarks</h1>\n    );\n}\n\n","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const ProfileStyle =  makeStyles((theme) => ({\n    root: {\n        position: \"relative\",\n        borderRadius: \"8px\"\n    },\n    image: {\n        width: \"100%\",\n        height: \"250px\",\n        borderTopLeftRadius: \"8px\",\n        borderTopRightRadius: \"8px\"\n    },\n    profileImage: {\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        zIndex: 20,\n        position: \"absolute\",\n        top: \"200px\",\n        left: \"5%\"\n    },\n    editButton: {\n        color: \"black\",\n        marginTop: theme.spacing(2),\n        borderRadius: \"16px\"\n    },\n    userName: {\n        padding: theme.spacing(0,2),\n        fontWeight: \"bold\"\n    },\n    bio:{\n        padding: theme.spacing(0,2)\n    },\n    bioInfoLayout: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n    bioInfo: {\n        marginRight: theme.spacing(2),\n        alignItems: \"center\",\n        textDecoration: \"none\"\n    },\n    bioInfoIcon: {\n        position: \"relative\",\n        marginRight: theme.spacing(1),\n        width: theme.typography.body1.fontSize,\n        height: theme.typography.body1.fontSize\n    },\n    invis: {\n        visibility: \"hidden\"\n    }\n}));","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const LogsStyle = makeStyles((theme) => ({\n\troot: {},\n\theader: {\n\t\tborderRadius: \"15px 15px 0 0\",\n\t\tbackgroundColor: \"#000000\",\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tfontSize: \"20px\",\n\t\tfontWeight: \"bold\",\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 2px 0\",\n\t\tborderColor: \"lightblue\"\n\t},\n\tnotification: {\n\t\tpaddingLeft: theme.spacing(6),\n\t\tpaddingRight: theme.spacing(3),\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingBottom: theme.spacing(1),\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 1px 0\",\n\t\tborderColor: \"#a7a7a7\",\n\t},\n\ticon: {\n\t\tmarginTop: 3,\n\t\tmarginLeft: -35,\n\t\tmarginRight: 10,\n\t\theight: theme.spacing(3),\n\t\twidth: theme.spacing(3),\n\t},\n\tprofilePictures: {\n\t\tdisplay: \"flex\",\n\t\tpaddingBottom: theme.spacing(1),\n\t},\n\tpicture: {\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: theme.spacing(4),\n\t\theight: theme.spacing(4),\n\t},\n\ttext: {\n\t\tpaddingBottom: theme.spacing(0.5),\n\t},\n\ttweet: {\n\t\tcolor: \"#a0a0a0\",\n\t\tfontSize: 14,\n\t\tvisibility: 0.5\n\t},\n\tsourceName: {\n\t\tfontWeight: \"bold\",\n\t},\n}));","import FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport React from \"react\";\nimport {LogsStyle} from \"./LogsStyle\";\n\nfunction isRTL(s) {\n\tconst ltrChars = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF'\n\t\t+ '\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\n\tconst rtlChars = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n\tconst rtlDirCheck = new RegExp('^[^' + ltrChars + ']*[' + rtlChars + ']');\n\t\n\treturn rtlDirCheck.test(s);\n}\n\nexport default function Log(props) {\n\tconst classes = LogsStyle();\n\t\n\tconst avatarURLs = [\n\t\tprops.target.profile_picture,\n\t];\n\tconst targetName = props.target.name;\n\tconst regex = props.tweetText.toString().match(new RegExp(\"Tweet (.*) at\"));\n\tconst tweetText = regex !== null ? regex[1] : \"\";\n\tconst dir = isRTL(tweetText.toString().split(' ')[0]) ? \"rtl\" : \"ltr\";\n\tconst type = props.type;\n\tconst typeMap = {\n\t\t\"Like\": <FavoriteIcon className={classes.icon}\n\t\t                      style={{color: \"#ff0000\"}}/>,\n\t\t\"Follow\": <PersonIcon className={classes.icon}\n\t\t                      style={{color: \"#0099ff\"}}/>,\n\t\t\"Retweet\": <RepeatIcon className={classes.icon}\n\t\t                       style={{color: \"#2ae000\"}}/>,\n\t}\n\tconst text = {\n\t\t\"Like\": <Typography display={\"inline\"}>You liked <Typography\n\t\t\tdisplay={\"inline\"}\n\t\t\tclassName={classes.sourceName}>{targetName}</Typography>'s\n\t\t\ttweet.</Typography>,\n\t\t\"Follow\": <Typography display={\"inline\"}>You followed <Typography\n\t\t\tdisplay={\"inline\"}\n\t\t\tclassName={classes.sourceName}>{targetName}</Typography>.</Typography>,\n\t\t\"Retweet\": <Typography display={\"inline\"}>You retweeted <Typography\n\t\t\tdisplay={\"inline\"}\n\t\t\tclassName={classes.sourceName}>{targetName}</Typography>'s\n\t\t\ttweet.</Typography>,\n\t}\n\t\n\treturn (\n\t\t<Card square className={classes.root}>\n\t\t\t<CardActionArea>\n\t\t\t\t<Grid container className={classes.notification}>\n\t\t\t\t\t{typeMap[type]}\n\t\t\t\t\t<div className={classes.profilePictures}>\n\t\t\t\t\t\t<Avatar item src={avatarURLs[0]}\n\t\t\t\t\t\t        className={classes.picture}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Grid container className={classes.text}>\n\t\t\t\t\t\t{text[type]}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{type === \"Follow\" ? null :\n\t\t\t\t\t\t<Grid container className={classes.tweet}\n\t\t\t\t\t\t      style={{direction: dir}}>{tweetText}</Grid>}\n\t\t\t\t</Grid>\n\t\t\t</CardActionArea>\n\t\t</Card>\n\t);\n}","import Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport {LogsStyle} from \"./LogsStyle\";\nimport Log from \"./Log\";\n\nexport default function Logs({events}) {\n\tconst style = LogsStyle();\n\t\n\treturn (\n\t\t<Paper className={style.root}>\n\t\t\t{\n\t\t\t\tevents !== null && events.length > 0 ? events.map(l =>\n\t\t\t\t\t<Log type={l.mode} tweetText={l.content} target={l.target}/>\n\t\t\t\t)\n\t\t\t\t: null\n\t\t\t}\n\t\t</Paper>\n\t);\n}","import React, {useState} from \"react\";\nimport {Tab, Tabs, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Identity from \"./Identity\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div role=\"tabpanel\" hidden={value !== index} id={`full-width-tabpanel-${index}`}\n             aria-labelledby={`full-width-tab-${index}`}{...other}>\n            {value === index && (<Box p={3}><Typography>{children}</Typography></Box>)}\n        </div>\n    );\n}\n\n\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nfunction FollowDialog({logged, followListState, open, setOpen}) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [dialogSelectedTab, setDialogSelectedTab] = useState(0);\n    const handleDialogTabChange = (event, newValue) => setDialogSelectedTab(newValue);\n\n    const handleClose = () => setOpen(false);\n    const handleChangeIndex = (index) => setDialogSelectedTab(index);\n\n\n    return (\n        <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            fullWidth\n            maxWidth={\"sm\"}\n            onClose={handleClose}\n            aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle id=\"responsive-dialog-title\">{\"Follow List\"}</DialogTitle>\n            <DialogContent>\n                <Tabs value={dialogSelectedTab} onChange={handleDialogTabChange} indicatorColor=\"primary\"\n                      textColor=\"primary\" variant=\"fullWidth\" aria-label=\"full width tabs example\">\n                    <Tab label=\"Followings\" {...a11yProps(0)} />\n                    <Tab label=\"Followers\" {...a11yProps(1)} />\n                </Tabs>\n                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={dialogSelectedTab} onChangeIndex={handleChangeIndex}>\n                    <TabPanel value={dialogSelectedTab} index={0} dir={theme.direction}>\n                        {isStatePresent(followListState) ? followListState.followings.map((each,i) => <Identity key={i} logged={logged} closeDialog={handleClose} identity={each}/>) : null}\n                    </TabPanel>\n                    <TabPanel value={dialogSelectedTab} index={1} dir={theme.direction}>\n                        {isStatePresent(followListState) ? followListState.followers.map((each,i) => <Identity key={i} closeDialog={handleClose} identity={each}/>) : null}\n                    </TabPanel>\n\n                </SwipeableViews>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleClose} color=\"primary\">Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n}\n\n\n\nexport default FollowDialog;","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const EditProfileStyle = makeStyles((theme) => ({\n\troot: {\n\t\theight: \"auto\",\n\t},\n\theader: {\n\t\theight: 300,\n\t\tzIndex: \"0\"\n\t},\n\tprofile: {\n\t\tborderStyle: \"solid\",\n\t\tborderColor: \"white\",\n\t\tborderWidth: \"5px\",\n\t\tborderRadius: \"100px\",\n\t\tposition: \"relative\",\n\t\theight: 150,\n\t\twidth: 150,\n\t\tmarginTop: \"-75px\",\n\t\tmarginLeft: \"10px\"\n\t},\n\taddHeaderIcon: {\n\t\tcolor: \"#000000\",\n\t\tmarginTop: \"23%\",\n\t\tmarginLeft: \"35%\",\n\t\tposition: \"absolute\"\n\t},\n\tdeleteIcon: {\n\t\tcolor: \"#000000\",\n\t\tmarginTop: \"23%\",\n\t\tmarginLeft: \"45%\",\n\t\tposition: \"absolute\"\n\t},\n\taddProfileIcon: {\n\t\tcolor: \"#000000\",\n\t\tmarginTop: \"-25px\",\n\t\tmarginLeft: \"10%\",\n\t\tposition: \"absolute\",\n\t\tzIndex: \"1\",\n\t},\n\tclose: {\n\t\tleft: \"5px\",\n\t\tposition: \"absolute\",\n\t\tcolor: \"#4947ff\"\n\t},\n\tedit: {\n\t\tborderRadius: \"30px\",\n\t\tcolor: \"#ffffff\",\n\t\tfontWeight: \"bold\",\n\t\tbackgroundColor: \"#4947ff\"\n\t}\n}));","import React, {useRef, useState} from \"react\";\nimport {EditProfileStyle} from \"./EditProfileStyle\";\nimport {Button, useMediaQuery} from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {updateProfile} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\nfunction EditProfile({profile, open, setOpen, updateUserProfile}) {\n\tconst style = EditProfileStyle();\n\tconst fullScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n\n\tconst [bioInput, setBio] = useState(isStatePresent(updateUserProfile) ? updateUserProfile.bio : profile.bio);\n\tconst [nameInput, setName] = useState(isStatePresent(updateUserProfile) ? updateUserProfile.name : profile.name);\n\tconst [profilePic, setProfilePic] = useState(null);\n\tconst [headerPic, setHeaderPic] = useState(null);\n\tconst [profilePicPrev, setProfilePicPrev] = useState(profile.profile_picture);\n\tconst [headerPicPrev, setHeaderPicPrev] = useState(profile.header_picture);\n\n\tfunction handleChangeHeader(ev) {\n\t\tconst file = ev.target.files[0];\n\t\tsetHeaderPic(file);\n\n\t\tlet reader = new FileReader();\n\t\treader.onload = ev1 => setHeaderPicPrev(ev1.target.result);\n\t\treader.readAsDataURL(file);\n\t}\n\n\tconst deleteHeader = () => setHeaderPic(null);\n\n\tfunction handleChangeProfile(ev) {\n\t\tconst file = ev.target.files[0];\n\t\tsetProfilePic(file);\n\n\t\tlet reader = new FileReader();\n\t\treader.onload = ev1 => setProfilePicPrev(ev1.target.result);\n\t\treader.readAsDataURL(file);\n\t}\n\n\tconst deleteProfilePic = () => setProfilePic(null);\n\n\tconst updateProfile = e => {\n\t\te.preventDefault();\n\t\tconst np = {\n\t\t\tusername: profile.username,\n\t\t\tname: nameInput,\n\t\t\tbio: bioInput,\n\t\t\tprofilePicture: profilePic,\n\t\t\theader: headerPic,\n\t\t};\n\t\tupdateUserProfile(np);\n\t\tsetOpen(false);\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\tclassName={style.root}\n\t\t\tfullScreen={fullScreen}\n\t\t\topen={open}\n\t\t\tfullWidth\n\t\t\tmaxWidth={\"sm\"}\n\t\t\tonClose={e => setOpen(false)}\n\t\t\taria-labelledby=\"responsive-dialog-title\">\n\t\t\t<DialogActions style={{paddingTop: \"20px\"}}>\n\t\t\t\t<IconButton onClick={e => setOpen(false)} color=\"primary\" className={style.close}>\n\t\t\t\t\t<CancelIcon/>\n\t\t\t\t</IconButton>\n\t\t\t\t<DialogTitle id=\"title\" style={{left: \"50px\", position: \"absolute\"}}>{\"Edit Profile\"}</DialogTitle>\n\t\t\t\t<Button type=\"submit\" color=\"primary\" variant=\"contained\" className={style.edit} disableElevation onClick={updateProfile}>\n\t\t\t\t\tEdit Profile\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t\t<DialogContent>\n\t\t\t\t<IconButton component={\"label\"} className={style.addHeaderIcon}>\n\t\t\t\t\t<AddAPhotoIcon /> <input onChange={handleChangeHeader}\n\t\t\t\t\t\t\t\t\t\t\t id={\"media\"} type={\"file\"}\n\t\t\t\t\t\t\t\t\t\t\t accept={\"image/*\"}\n\t\t\t\t\t\t\t\t\t\t\t hidden/>\n\t\t\t\t</IconButton>\n\t\t\t\t<IconButton className={style.deleteIcon} onClick={deleteHeader}>\n\t\t\t\t\t<HighlightOffIcon/>\n\t\t\t\t</IconButton>\n\t\t\t\t<CardMedia image={headerPicPrev} className={style.header}/>\n\t\t\t\t<IconButton className={style.addProfileIcon} component={\"label\"} >\n\t\t\t\t\t<AddAPhotoIcon /><input onChange={handleChangeProfile}\n\t\t\t\t\t\t\t\t\t\t\tid={\"media\"} type={\"file\"}\n\t\t\t\t\t\t\t\t\t\t\taccept={\"image/*\"}\n\t\t\t\t\t\t\t\t\t\t\thidden/>\n\t\t\t\t</IconButton>\n\t\t\t\t<CardMedia image={profilePicPrev} className={style.profile}/>\n\t\t\t</DialogContent>\n\t\t\t<DialogContent>\n\t\t\t\t<TextField\n\t\t\t\t\tautoFocus\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\tdefaultValue={profile.name}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tfullWidth\n\t\t\t\t\trequired\n\t\t\t\t\tonChange={event => setName(event.target.value)}\n\t\t\t\t/>\n\t\t\t</DialogContent>\n\t\t\t<DialogContent>\n\t\t\t\t<TextField\n\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\tid=\"bio\"\n\t\t\t\t\tlabel=\"Bio\"\n\t\t\t\t\tdefaultValue={profile.bio}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tmultiline\n\t\t\t\t\trows={3}\n\t\t\t\t\tfullWidth\n\t\t\t\t\tonChange={event => setBio(event.target.value)}\n\t\t\t\t/>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t);\n}\n\nconst mapStateToProp = state => ({\n});\n\nconst mapActionsToProp = dispatch => ({\n\tupdateUserProfile: (newProfile) => dispatch(updateProfile(newProfile)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(EditProfile);\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport {\n    Avatar,\n    Button,\n    Divider,\n    Grid,\n    Link as UILink,\n    Paper,\n    Tab,\n    Tabs,\n    Typography\n} from \"@material-ui/core\";\nimport {ProfileStyle} from \"./ProfileStyle\";\nimport {Link, Route, Switch, useParams, useRouteMatch} from \"react-router-dom\";\nimport {\n    Cake as BirthdayIcon,\n    CalendarToday as JoinDateIcon,\n    LocationOn as LocationIcon\n} from \"@material-ui/icons\";\nimport Logs from \"./Logs\";\nimport {follow, followList, getProfile, logs, unfollow} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {getUserProfileImg, isStatePresent} from \"../redux/stateUtils\";\nimport FollowDialog from \"./FollowDialog\";\nimport EditProfile from \"./EditProfile\";\nimport Tweet from \"./Tweet\";\n\nconst PROFILE_FALLBACK = \"https://i.stack.imgur.com/34AD2.jpg\";\nconst HEADER_FALLBACK = \"https://www.tweetbrander.com/wp-content/uploads/2013/01/twitter-header-post-640x360.png\";\n\nconst getFollowingCount = state => isStatePresent(state) ? state.profile.followings.length : -1;\nconst getFollowersCount = state => isStatePresent(state) ? state.profile.followers.length : -1;\n\n\nfunction Profile({profileState, userState,followUser, unfollowUser, tweets, getUserProfile, getFollowList, followListState, logs, getLogs}) {\n    const classes = ProfileStyle();\n    let {url} = useRouteMatch();\n    let {username} = useParams();\n    const logged = isStatePresent(userState);\n\n    const [openFollowDialog, setOpenFollowDialog] = useState(false);\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n\n    const [selectedTab, setSelectedTab] = useState(0);\n    const handleTabChange = (event, newValue) => setSelectedTab(newValue);\n\n\n    useEffect(() => {\n        getUserProfile(username);\n        getFollowList(username);\n        getLogs(username);\n    }, [username]);\n\n\n\n    const userProfile = {\n        username: isStatePresent(profileState) ? profileState.profile.username : \"Loading..\",\n        name: isStatePresent(profileState) ? profileState.profile.name : \"Loading..\",\n        bio: isStatePresent(profileState) ? profileState.profile.bio : \"Loading..\",\n        profilePicture: isStatePresent(profileState) && profileState.profile.profile_picture !== \"\" ? getUserProfileImg(profileState.profile.profile_picture) : PROFILE_FALLBACK,\n        header: isStatePresent(profileState) && profileState.profile.header_picture !== \"\" ? getUserProfileImg(profileState.profile.header_picture) : HEADER_FALLBACK\n    };\n\n    const handleFollow = (ev) => {\n        console.log(profileState.profile.username);\n        if (profileState.profile.is_following) unfollowUser(profileState.profile.username);\n        else followUser(profileState.profile.username);\n    };\n\n    const getHeaderButton = () => {\n        if (!logged || !isStatePresent(profileState)) return <Button className={`${classes.editButton} ${classes.invis}`}>Edit profile</Button>\n\n        if (profileState.profile.username === userState.username)\n            return <Button className={classes.editButton}\n                           variant={\"outlined\"}\n                           component={Link} to={`${url}`}\n                           onClick={() => setOpenEditDialog(true)}>Edit profile</Button>\n\n        else return <Button className={classes.editButton}\n                variant={profileState.profile.is_following ? \"contained\" : \"outlined\"}\n                            onClick={handleFollow}>\n            {profileState.profile.is_following ? 'Following' : 'Follow'}\n        </Button>\n    }\n\n    return (\n        <Paper className={classes.root}>\n            <FollowDialog logged={logged} followListState={followListState} open={openFollowDialog} setOpen={setOpenFollowDialog}/>\n\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <img src={userProfile.header} className={classes.image} alt={\"random\"}/>\n                </Grid>\n                <Grid item xs={1} sm={8}><Avatar src={userProfile.profilePicture}\n                                                 className={classes.profileImage}/></Grid>\n                <Grid container xs={11} sm={4} justify={\"flex-end\"} spacing={2}>\n                    <Grid item>{getHeaderButton(profileState, userState)}</Grid>\n                    {/*<Route path={`${url}`}>*/}\n                    <EditProfile profile={userProfile} open={openEditDialog} setOpen={setOpenEditDialog}/>\n                    {/*</Route>*/}\n                </Grid>\n                <Grid item xs={12}><Typography className={classes.userName}>{userProfile.name}</Typography></Grid>\n                <Grid item xs={12}><Typography className={classes.bio}\n                                               variant={\"caption\"}>@{userProfile.username}</Typography></Grid>\n                <Grid item xs={12}>\n                    <Typography className={classes.bio}>{userProfile.bio}</Typography>\n                </Grid>\n                <Grid container xs={12} className={classes.bioInfoLayout}>\n                    <Typography display={\"inline\"} className={classes.bioInfo}><LocationIcon\n                        className={classes.bioInfoIcon}/>Mars</Typography>\n                    <Typography display={\"inline\"} className={classes.bioInfo}><BirthdayIcon\n                        className={classes.bioInfoIcon}/>Born December 13, 1999</Typography>\n                    <Typography display={\"inline\"} className={classes.bioInfo}><JoinDateIcon\n                        className={classes.bioInfoIcon}/>Joined August 2016</Typography>\n                </Grid>\n                <Grid container xs={12} className={classes.bioInfoLayout}>\n                    <Typography component={UILink} onClick={() => setOpenFollowDialog(true)}\n                                className={classes.bioInfo}>{getFollowingCount(profileState)} Followings</Typography>\n                    <Typography component={UILink} onClick={() => setOpenFollowDialog(true)}\n                                className={classes.bioInfo}>{getFollowersCount(profileState)} Followers</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Fragment>\n                        <Tabs value={selectedTab} onChange={handleTabChange}\n                              indicatorColor=\"primary\" textColor=\"primary\" variant={\"fullWidth\"}>\n                            <Tab label=\"Tweets\" component={Link} to={`${url}`}/>\n                            <Tab label=\"Tweets & replies\" component={Link} to={`${url}/with_replies`}/>\n                            <Tab label=\"Media\" component={Link} to={`${url}/media`}/>\n                            <Tab label=\"Logs\" component={Link} to={`${url}/logs`}/>\n                        </Tabs>\n                        <Divider/>\n                        <Switch>\n                            <Route exact path={`${url}`}>\n                                {isStatePresent(tweets) ? tweets.tweets.map(each => <Tweet fallback=\"profile\"  username={username} profilePic={getUserProfileImg(each.owner.profile_picture)}\n                                                                                           tweet={each}/>) : null}\n                            </Route>\n                            <Route path={`${url}/with_replies`}><h1>With Replies</h1></Route>\n                            <Route path={`${url}/media`}><h1>Media</h1></Route>\n                            <Route path={`${url}/logs`} ><Logs events={isStatePresent(logs) && \"events\" in logs ? logs.events : null}/></Route>\n                        </Switch>\n\n                    </Fragment>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user,\n    profileState: state.profile,\n    followListState: state.followList,\n    tweets: state.getTweets,\n    logs: state.logs,\n});\n\nconst mapActionsToProp = dispatch => ({\n    getUserProfile: (username) => dispatch(getProfile(username)),\n    getFollowList: (username) => dispatch(followList(username)),\n    followUser: (username) => dispatch(follow(username)),\n    unfollowUser: (username) => dispatch(unfollow(username)),\n    getLogs: (username) => dispatch(logs(username)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Profile);\n","import {makeStyles} from \"@material-ui/core\";\n\n\nexport const PopHashtagListStyle = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1,1)\n    },\n    title: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n    },\n    hashtag: {\n        padding: theme.spacing(1,1)\n    }\n}));","import Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {Link} from \"react-router-dom\";\n\nconst classes = makeStyles((theme) => ({\n    root: {\n        textDecoration: \"none\",\n    },\n    content: {\n        padding: theme.spacing(1)\n    }\n}));\n\n\nexport default function PopHashtag({hashtag}) {\n    const style = classes();\n    return (\n        <Card elevation={0} component={Link} to={`/explore?query=${hashtag.name}`} className={style.root}>\n            <CardActionArea className={style.content}>\n                <Typography>#{hashtag.name}</Typography>\n                <Typography>count:{hashtag.count}</Typography>\n            </CardActionArea>\n            <Divider/>\n        </Card>\n    );\n};","import React, {useEffect} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {PopHashtagListStyle} from \"./PopHashtagListStyle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport PopHashtag from \"./PopHashtag\";\nimport {getTrends, notificationList} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\n\nfunction PopHashtagList({trendsState,getTrends}) {\n    const style = PopHashtagListStyle();\n\n    useEffect(() => {\n        getTrends();\n    }, []);\n\n    return (\n        <Paper className={style.root}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Typography variant={\"h5\"} className={style.title}>What's Happening</Typography>\n                    <Grid item><Divider/></Grid>\n                </Grid>\n\n                {isStatePresent(trendsState) ? trendsState.trends.map(each => <Grid item xs={12} className={style.hashtag}><PopHashtag hashtag={each}/></Grid>) : null}\n            </Grid>\n        </Paper>\n    );\n\n};\n\nconst mapStateToProp = state => ({\n    trendsState: state.trends\n});\n\nconst mapActionsToProp = dispatch => ({\n    getTrends: () => dispatch(getTrends()),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(PopHashtagList);","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport {Avatar, makeStyles, Typography} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Link} from \"react-router-dom\";\nimport {logoutUser} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport {getUserProfileImg, isStatePresent} from \"../redux/stateUtils\";\n\nconst profileMenuLinks = [\"/profile\", \"/settings\",\"/auth/sign-in\"];\n\nconst style = makeStyles((theme) => ({\n    profileMenuLayout: {\n        width: \"max-content\",\n        backgroundColor: \"transparent\",\n        borderRadius: \"35px\"\n    },\n    profileMenuActionArea: {\n        width: \"auto\",\n        padding: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"row\"\n    },\n    profileMenuTitle: {\n        marginLeft: theme.spacing(1),\n        color: \"white\"\n    },\n}));\n\nfunction ProfileMenu({userState, logout}) {\n    const classes = style();\n    const logged = isStatePresent(userState);\n    const [profileMenuAnchor, setProfileMenuAnchor] = React.useState(null);\n    const handleProfileClick = (event) => setProfileMenuAnchor(event.currentTarget);\n    const handleProfileMenuClose = (which = -1) => {\n        setProfileMenuAnchor(null);\n        if (which === 2) { // logout\n            logout();\n        }\n    }\n\n\n    return (\n        <>\n            <Card elevation={0} className={classes.profileMenuLayout} onClick={handleProfileClick}>\n                <CardActionArea className={classes.profileMenuActionArea}>\n                    <Avatar src={getUserProfileImg(userState.profile_picture)} alt={userState.username}/>\n                    <Typography display={\"inline\"}\n                                className={classes.profileMenuTitle}>{logged ? userState.username : \"Sign In\"}</Typography>\n                </CardActionArea>\n            </Card>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={profileMenuAnchor}\n                keepMounted\n                open={Boolean(profileMenuAnchor)}\n                onClose={() => handleProfileMenuClose()}>\n                {logged ? <MenuItem onClick={() => handleProfileMenuClose(0)} component={Link}\n                                    to={`${profileMenuLinks[0]}/${userState.username}`}>Profile</MenuItem> : null}\n                {logged ? <MenuItem onClick={() => handleProfileMenuClose(1)} component={Link}\n                                    to={profileMenuLinks[1]}>Settings</MenuItem> : null}\n                {logged ? <MenuItem onClick={() => handleProfileMenuClose(2)} component={Link}\n                                    to={profileMenuLinks[2]}>Logout</MenuItem> : null}\n                {!logged ? <MenuItem onClick={() => setProfileMenuAnchor(null)} component={Link} to={\"/auth/sign-in\"}>Sign in</MenuItem> : null}\n\n            </Menu>\n        </>\n    );\n\n};\n\nconst mapStateToProp = state => ({\n    userState: state.user\n});\n\nconst mapActionsToProp = dispatch => ({\n    logout: () => dispatch(logoutUser())\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(ProfileMenu);","import React, {useEffect} from \"react\";\nimport {useParams} from 'react-router-dom';\nimport {getTweet} from \"../redux/actions\";\nimport {connect} from \"react-redux\";\nimport Tweet, {TWEET_DETAIL, TWEET_REPLY} from \"./Tweet\";\nimport {getUserProfileImg, isStatePresent} from \"../redux/stateUtils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst TweetDetailStyle = makeStyles((theme) => ({\n    commentTitle: {\n        padding: theme.spacing(1)\n    }\n}));\n\n\nfunction TweetDetail({userState,tweetState,getTweetById, list}) {\n    const classes = TweetDetailStyle();\n    const {id} = useParams();\n\n    useEffect(() => {\n        getTweetById(id);\n    }, [id]);\n    \n    return (\n        <Card>\n            {isStatePresent(tweetState) ? tweetState.parents.map(each=> <Tweet profilePic={getUserProfileImg(each.owner.profile_picture)} username={userState.username} tweet={each} /> ) : null}\n            {isStatePresent(tweetState) ? <Tweet type={TWEET_DETAIL} profilePic={getUserProfileImg(tweetState.owner.profile_picture)} username={userState.username} tweet={tweetState} list={list} fallback=\"detail\" shit={{id}} /> : null}\n            <Typography className={classes.commentTitle} variant={\"h6\"}>Comments</Typography>\n            <Divider/>\n            {isStatePresent(tweetState) ? tweetState.comments.map(each=> <Tweet type={TWEET_REPLY} profilePic={getUserProfileImg(each.owner.profile_picture)} username={userState.username} tweet={each} /> ) : null}\n        </Card>\n    );\n\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user,\n    tweetState: state.getTweet,\n    list: state.likeRetTweet,\n});\n\nconst mapActionsToProp = dispatch => ({\n    getTweetById: (id) => dispatch(getTweet(id)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(TweetDetail);\n","import {connect} from \"react-redux\";\nimport {makeStyles, Paper} from \"@material-ui/core\";\nimport {suggestionList} from \"../redux/actions\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, {Fragment} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Tweet from \"./Tweet\";\nimport Identity from \"./Identity\";\n\nconst SuggestionStyle = makeStyles((theme) => ({\n\troot: {},\n\theader: {\n\t\tborderRadius: \"15px 15px 0 0\",\n\t\tpaddingTop: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1),\n\t\tfontSize: \"20px\",\n\t\tfontWeight: \"bold\",\n\t\tborderStyle: \"solid\",\n\t\tborderWidth: \"0 0 5px 0\",\n\t\tborderColor: \"lightblue\"\n\t},\n}));\n\nfunction Suggestion({suggestion, getSuggestion}) {\n\tconst classes = SuggestionStyle();\n\t\n\tif (suggestion.state === -1) {\n\t\tgetSuggestion();\n\t}\n\t\n\tconsole.log(suggestion);\n\t\n\treturn (\n\t\t<Paper className={classes.root}>\n\t\t\t<Grid item className={classes.header}>Suggestion</Grid>\n\t\t\t<Fragment>\n\t\t\t\t{\"users\" in suggestion ? suggestion.users.map(u => {\n\t\t\t\t\treturn <Identity identity={u}/>\n\t\t\t\t}) : null}\n\t\t\t</Fragment>\n\t\t</Paper>\n\t);\n}\n\nconst mapStateToProp = state => ({\n\tuserState: state.user,\n\tsuggestion: state.suggestion,\n});\n\nconst mapActionsToProp = dispatch => ({\n\tgetSuggestion: () => dispatch(suggestionList()),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Suggestion);\n","import React, {useEffect, useState} from 'react';\nimport {useTheme} from '@material-ui/core/styles';\nimport {\n    AppBar,\n    Button,\n    CssBaseline,\n    Divider,\n    Drawer,\n    Grid,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Toolbar,\n    Typography\n} from '@material-ui/core';\nimport {\n    Bookmark as BookmarksIcon,\n    Explore as ExploreIcon,\n    Home as HomeIcon,\n    Menu as MenuIcon,\n    Message as MessageIcon,\n    Notifications as NotificationsIcon,\n    Person as ProfileIcon,\n} from '@material-ui/icons';\nimport {MainStyle} from \"./MainStyle\";\nimport {Link, Redirect, Route, Switch, useRouteMatch} from 'react-router-dom';\nimport Home from \"./Home\";\nimport Messages from \"./Messages\";\nimport Explore from \"./Explore\";\nimport Notifications from \"./Notifications\";\nimport Bookmarks from \"./Bookmarks\";\nimport Profile from \"./Profile\";\nimport PopHashtagList from \"./PopHashtagList\";\nimport ProfileMenu from \"./ProfileMenu\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport TweetDetail from \"./TweetDetail\";\nimport TweetDialog from \"./TweetDialog\";\nimport {connect} from \"react-redux\";\nimport Badge from \"@material-ui/core/Badge\";\nimport {notificationList} from \"../redux/actions\";\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Suggestion from \"./Suggestion\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\nconst loginAddress = \"/auth/sign-in\";\nconst menu = [\"Home\", \"Explore\", \"Notifications\", \"Messages\", \"Bookmarks\", \"Profile\", \"Suggestion\"];\nconst notLogged = [loginAddress, \"/Explore\", loginAddress, loginAddress, loginAddress, loginAddress, loginAddress];\nconst icons = [<HomeIcon/>, <ExploreIcon/>, <NotificationsIcon/>, <MessageIcon/>, <BookmarksIcon/>, <ProfileIcon/>, <GroupAddIcon/>];\n\n\n\nexport let READ_COUNT = 0;\nexport let TOTAL_COUNT = 0;\n\n\nfunction Main({userState, notifications, window, getNotifications}) {\n    const classes = MainStyle();\n    const theme = useTheme();\n    let {url} = useRouteMatch();\n    const logged = isStatePresent(userState);\n    \n    console.log(\"in main \", userState);\n    \n    useEffect(() => {\n        console.log(notifications);\n        setInterval(() => {\n            getNotifications();\n        }, 5000);\n    }, []);\n    \n    if (\"events\" in notifications && notifications.events !== null) {\n        if (notifications.events != null) TOTAL_COUNT = notifications.events.length;\n    }\n    \n    \n    const [mobileOpen, setMobileOpen] = useState(false);\n\n    const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n    const [openTweetDialog, setOpenTweetDialog] = useState(false);\n\n    const generateMenuItems = ()=> {\n        return menu.map((text, index) => (\n            <ListItem button key={text} component={Link}\n                      to={logged ? `/${menu[index].toLowerCase()}${index === 5 ? `/${userState.username}` : ''}` : notLogged[index].toLowerCase()}>\n                <ListItemIcon>{icons[index]}</ListItemIcon>\n                {\n                    text === \"Notifications\" ?\n                        <Badge color=\"secondary\" badgeContent={TOTAL_COUNT - READ_COUNT} onClick={() => {return READ_COUNT = TOTAL_COUNT}}>\n                            <ListItemText  primary={text}/>\n                        </Badge>\n                        : <ListItemText primary={text}/>\n                }\n            </ListItem>\n        ));\n    }\n\n\n    const drawer = (\n        <div className={classes.sideMenu}>\n            <div className={classes.toolbar}>\n            </div>\n            <Divider/>\n            <List>{generateMenuItems()}</List>\n            <Divider/>\n            {logged ?<Button className={classes.tweetButton} variant={\"contained\"} fullWidth\n                    color={\"primary\"} onClick={() => setOpenTweetDialog(true)}>Tweet</Button> : null}\n        </div>);\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <TweetDialog open={openTweetDialog} setOpen={setOpenTweetDialog} />\n                <div>\n                    <CssBaseline/>\n                    <AppBar position=\"fixed\" className={classes.appBar}>\n                        <Toolbar>\n                            <IconButton color=\"inherit\" aria-label=\"open drawer\" edge=\"start\"\n                                        onClick={handleDrawerToggle} className={classes.menuButton}><MenuIcon/></IconButton>\n                            <Grid container alignItems={\"center\"} justify={\"space-between\"} spacing={3}>\n                                <Grid item><Typography variant=\"h6\" noWrap>Twitter</Typography></Grid>\n                                <Grid item><ProfileMenu/></Grid>\n                            </Grid>\n                        </Toolbar>\n                    </AppBar>\n                    <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                        <Hidden smUp implementation=\"css\">\n                            <Drawer\n                                container={container}\n                                variant=\"temporary\"\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                                open={mobileOpen}\n                                onClose={handleDrawerToggle}\n                                classes={{paper: classes.drawerPaper,}}\n                                ModalProps={{keepMounted: true,/* // Better open performance on mobile.*/}}>\n                                {drawer}\n                            </Drawer>\n                        </Hidden>\n                        <Hidden xsDown implementation=\"css\">\n                            <Drawer classes={{paper: classes.drawerPaper,}} variant=\"permanent\" open>{drawer}</Drawer>\n                        </Hidden>\n                    </nav>\n                </div>\n            <Grid container className={classes.content} alignItems={\"flex-start\"} justify={\"center\"}>\n                <Grid item xs={12}><div className={classes.toolbar}/></Grid>\n                <Grid item xs={11} md={9} lg={7} xl={5} className={classes.timeline}>\n                    <Switch>\n                        <Route exact path={\"/\"}>{logged ? <Home/> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}${menu[0].toLowerCase()}`}>{logged ? <Home/> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}${menu[1].toLowerCase()}`} component={Explore}/>\n                        <Route path={`${url}${menu[2].toLowerCase()}`}>{logged ? <Notifications /> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}${menu[3].toLowerCase()}`}>{logged ? <Messages/> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}${menu[4].toLowerCase()}`}>{logged ? <Bookmarks/> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}${menu[5].toLowerCase()}/:username`}><Profile/></Route>\n                        <Route path={`${url}${menu[6].toLowerCase()}`}>{logged ? <Suggestion/> : <Redirect to={\"/auth/sign-in\"}/>}</Route>\n                        <Route path={`${url}tweet-detail/:id`}><TweetDetail/></Route>\n                    </Switch>\n                </Grid>\n                <Grid item md={false} lg={3} xl={3}><PopHashtagList/></Grid>\n            </Grid>\n\n        </div>\n    );\n}\n\n\nconst mapStateToProp = state => ({\n    userState: state.user,\n    notifications: state.notifications,\n});\n\nconst mapActionsToProp = dispatch => ({\n    getNotifications: () => dispatch(notificationList()),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(Main);","import {makeStyles} from \"@material-ui/core/styles\";\n\n\nexport const AuthStyle =  makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        maxWidth: \"444px\",\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    progress: {\n        width: '100%'\n    }\n}));\n","import {Avatar, Typography, TextField, FormControlLabel, Checkbox, Button, Grid} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport React, {useState} from \"react\";\nimport {Link} from 'react-router-dom'\nimport {AuthStyle} from \"./AuthStyle\";\nimport {connect} from \"react-redux\";\nimport {signin} from \"../redux/actions\";\n\n\nfunction SignIn({signinUser}) {\n    const classes = AuthStyle();\n    const [emailInput, setEmailInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n\n    const onSubmit = ev => {\n        ev.preventDefault();\n        const user = {\n            email: emailInput,\n            password: passwordInput\n        };\n        signinUser(user);\n    };\n\n    return (\n        <div className={classes.paper} >\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon/>\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n            </Typography>\n            <form className={classes.form} onSubmit={onSubmit} noValidate>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    onChange={event => setEmailInput(event.target.value)}\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={event => setPasswordInput(event.target.value)}\n                />\n                <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\"/>}\n                    label=\"Remember me\"\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >Sign In</Button>\n                <Grid container>\n                    <Grid item xs><Link to={\"#\"} variant=\"body2\">Forgot password?</Link></Grid>\n                    <Grid item><Link to={`sign-up`} variant=\"body2\">Don't have an account? Sign Up</Link></Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\n\nconst mapStateToProp = state => ({\n\n});\n\nconst mapActionsToProp = dispatch => ({\n    signinUser: user => dispatch(signin(user)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(SignIn);","import React, { useState} from 'react';\nimport {Avatar, Typography, Container, CssBaseline, TextField, Button, Grid} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport {Link} from 'react-router-dom'\nimport {AuthStyle} from \"./AuthStyle\";\nimport {connect} from 'react-redux';\nimport {signup} from \"../redux/actions\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {isStateFailed, isStateLoading} from \"../redux/stateUtils\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\n\nfunction SignUp({userState, signupUser}) {\n    const classes = AuthStyle();\n    const [fNameInput, setFName] = useState(\"\");\n    const [lNameInput, setLName] = useState(\"\");\n    const [usernameInput, setUsername] = useState(\"\");\n    const [emailInput, setEmail] = useState(\"\");\n    const [passwordInput, setPassword] = useState(\"\");\n\n\n    const handleSubmit = ev => {\n        ev.preventDefault();\n        const user = {\n            firstName: fNameInput,\n            lastName: lNameInput,\n            username: usernameInput,\n            email: emailInput,\n            password: passwordInput\n        };\n        signupUser(user);\n    };\n\n    const [dialogOpen, setDialogOpen] = React.useState(isStateFailed(userState));\n\n    const handleDialogOpen = () => setDialogOpen(true);\n\n    const handleDialogClose = () => setDialogOpen(false);\n\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                {isStateLoading(userState) ? <LinearProgress className={classes.progress}/> : null}\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField autoComplete=\"fname\" name=\"firstName\" variant=\"outlined\" required fullWidth\n                                       id=\"firstName\" label=\"First Name\" autoFocus\n                                       onChange={event => setFName(event.target.value)}/>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField variant=\"outlined\" required fullWidth id=\"lastName\" label=\"Last Name\"\n                                       name=\"lastName\" autoComplete=\"lname\"\n                                       onChange={event => setLName(event.target.value)}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\" required fullWidth id=\"username\"\n                                       label=\"Username\" name=\"username\" autoComplete=\"username\"\n                                       onChange={event => setUsername(event.target.value)}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\" required fullWidth id=\"email\"\n                                       label=\"Email Address\" name=\"email\" autoComplete=\"email\" inputMode={\"email\"}\n                                       onChange={event => setEmail(event.target.value)}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField variant=\"outlined\" required fullWidth name=\"password\" label=\"Password\"\n                                       type=\"password\" id=\"password\" autoComplete=\"current-password\"\n                                       onChange={event => setPassword(event.target.value)}/>\n                        </Grid>\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Sign Up</Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item><Link to={`sign-in`} variant=\"body2\">Already have an account? Sign in</Link></Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Dialog\n                open={dialogOpen}\n                onClose={handleDialogClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{\"Failed to Sign Up\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">There was an error in sign-up.</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose} color=\"primary\">Close</Button>\n                </DialogActions>\n            </Dialog>\n        </Container>\n    );\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user\n});\n\nconst mapActionsToProp = dispatch => ({\n    signupUser: user => dispatch(signup(user)),\n});\n\nexport default connect(mapStateToProp, mapActionsToProp)(SignUp);","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {Switch, Route, useRouteMatch, Redirect} from 'react-router-dom'\nimport SignIn from './SignIn'\nimport SignUp from \"./SignUp\";\nimport {AuthStyle} from \"./AuthStyle\";\nimport {connect} from \"react-redux\";\nimport {isStatePresent} from \"../redux/stateUtils\";\n\n\n\nfunction Auth({userState}) {\n    const classes = AuthStyle();\n    let {url} = useRouteMatch();\n    let logged = isStatePresent(userState);\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Switch>\n                    <Route path={`${url}/sign-in`}>{logged ? <Redirect to={\"/home\"} /> : <SignIn />}</Route>\n                    <Route path={`${url}/sign-up`}>{logged ? <Redirect to={\"/home\"} /> : <SignUp />}</Route>\n                </Switch>\n\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapStateToProp = state => ({\n    userState: state.user\n});\n\nconst mapActionsToProp = dispatch => ({\n});\n\nexport default connect(mapStateToProp,mapActionsToProp)(Auth);","import {\n    LOGOUT,\n    SIGNIN_FAIL,\n    SIGNIN_INIT,\n    SIGNIN_SUCCESS,\n    SIGNUP_FAIL,\n    SIGNUP_INIT,\n    SIGNUP_SUCCESS,\n    GET_PROFILE_INIT,\n    GET_PROFILE_SUCCESS,\n    GET_PROFILE_FAIL,\n    STATE_NULL,\n    STATE_LOADING,\n    STATE_SUCCESS,\n    CREATE_TWEET_INIT,\n    CREATE_TWEET_SUCCESS,\n    CREATE_TWEET_FAIL,\n    TIMELINE_INIT,\n    DEL_TWEET_FAIL,\n    DEL_TWEET_INIT,\n    DEL_TWEET_SUCCESS,\n    GET_TWEET_INIT,\n    GET_TWEET_SUCCESS,\n    GET_TWEET_FAIL,\n    GET_LIKE_RET_TWEET_INIT,\n    GET_LIKE_RET_TWEET_SUCCESS,\n    GET_LIKE_RET_TWEET_FAIL,\n    LIKE_TWEET_INIT,\n    LIKE_TWEET_SUCCESS,\n    LIKE_TWEET_FAIL,\n    UNLIKE_TWEET_INIT,\n    UNLIKE_TWEET_SUCCESS,\n    UNLIKE_TWEET_FAIL,\n    RETWEET_INIT,\n    RETWEET_SUCCESS,\n    RETWEET_FAIL,\n    DEL_RETWEET_INIT,\n    DEL_RETWEET_SUCCESS,\n    DEL_RETWEET_FAIL,\n    UPDATE_PROFILE_INIT,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_USER_INIT,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_FAIL,\n    FOLLOW_INIT,\n    FOLLOW_SUCCESS,\n    FOLLOW_FAIL,\n    UNFOLLOW_INIT,\n    UNFOLLOW_SUCCESS,\n    UNFOLLOW_FAIL,\n    FOLLOW_LIST_INIT,\n    FOLLOW_LIST_SUCCESS,\n    FOLLOW_LIST_FAIL,\n    TIMELINE_SUCCESS,\n    TIMELINE_FAIL,\n    GET_TWEETS_INIT,\n    GET_TWEETS_SUCCESS,\n    GET_TWEETS_FAIL,\n    LOGS_INIT,\n    LOGS_SUCCESS,\n    LOGS_FAIL,\n    TWEET_ACTION_INIT,\n    TWEET_ACTION_SUCCESS,\n    TWEET_ACTION_FAIL,\n    SEARCH_INIT,\n    SEARCH_SUCCESS,\n    SEARCH_FAIL,\n    NOTIFICATIONS_INIT,\n    NOTIFICATIONS_SUCCESS,\n    NOTIFICATIONS_FAIL,\n    SUGGESTION_INIT, SUGGESTION_SUCCESS, SUGGESTION_FAIL, TRENDS_INIT, TRENDS_SUCCESS, TRENDS_FAIL,\n} from \"./actions\";\n\nconst createDefault = () => ({\n    state: STATE_NULL\n});\n\nconst initUser = createDefault();\nconst initProfile = createDefault();\nconst initCreateTweet = createDefault();\nconst initTimeline = createDefault();\nconst initDeleteTweet = createDefault();\nconst initGetTweet = createDefault();\nconst initLikeRetTweet = createDefault();\n\n// let prevLength = 0;\n\nconst generalReducer = (initState, action, types) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case types[0]:{ // init\n            return {\n                ...initState,\n                state: STATE_LOADING\n            };\n        }\n        case types[1]:{ // success\n            const {result} = payload;\n            // prevLength = \"events\" in result ? result.events.length - prevLength : 0;\n            return {\n                ...result,\n                // prevLength: prevLength,\n                state: STATE_SUCCESS\n            };\n        }\n        case types[2]:{ // fail\n            const {code} = payload;\n            return {\n                ...initState,\n                state: code\n            };\n        }\n        default:\n            return initState;\n    }\n};\n\nexport const authReducer = (userState = initUser, action) => {\n    const {type, payload} = action;\n    console.log(\"res \", type, payload);\n\n    switch (type) {\n        case SIGNUP_INIT: {\n            return {\n                ...userState,\n                state: STATE_LOADING\n            };\n        }\n        case SIGNUP_FAIL: {\n            const {code} = payload;\n            return {\n                ...userState,\n                state: code\n            };\n        }\n        case SIGNUP_SUCCESS: {\n            const {result} = payload;\n            return {\n                ...result,\n                state: STATE_SUCCESS\n            };\n        }\n        case SIGNIN_INIT: {\n            return {\n                ...userState,\n                state: STATE_LOADING\n            };\n        }\n        case SIGNIN_SUCCESS: {\n            const {result} = payload;\n            return {\n                ...result,\n                state: STATE_SUCCESS\n            };\n        }\n        case SIGNIN_FAIL: {\n            const {code} = payload;\n            return {\n                ...userState,\n                state: code\n            };\n        }\n        case LOGOUT: {\n            return {\n                state: STATE_NULL\n            };\n        }\n        default:\n            return userState;\n    }\n};\n\nexport const trendsReducer = (trendsState = createDefault(), action) => {\n    return generalReducer(trendsState, action, [TRENDS_INIT, TRENDS_SUCCESS, TRENDS_FAIL]);\n};\n\nexport const createTweetReducer = (createTweet = initCreateTweet, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case CREATE_TWEET_INIT:{\n            return {\n              ...createTweet,\n              state: STATE_LOADING\n            };\n        }\n        case CREATE_TWEET_SUCCESS:{\n            const {result} = payload;\n            return {\n                ...result,\n                state: STATE_SUCCESS\n            };\n        }\n        case CREATE_TWEET_FAIL:{\n            const {code} = payload;\n            return {\n                ...createTweet,\n                state: code\n            };\n        }\n        default:\n            return createTweet;\n    }\n}\n\nexport const profileReducer = (profileState = initProfile, action) => {\n    const {type, payload} = action;\n    \n    switch (type) {\n        case GET_PROFILE_INIT: {\n            return {\n                ...profileState,\n                state: STATE_LOADING\n            };\n        }\n        case GET_PROFILE_SUCCESS: {\n            const {profile} = payload;\n            return {\n                ...profile,\n                state: STATE_SUCCESS\n            };\n        }\n        case GET_PROFILE_FAIL: {\n            const {code} = payload;\n            return {\n                ...profileState,\n                state: code\n            };\n        }\n        default:\n            return profileState;\n    }\n}\n\nexport const timelineReducer = (timelineState = initTimeline, action) =>{\n    const {type, payload} = action;\n\n    switch (type) {\n        case TIMELINE_INIT: {\n            return {\n                ...timelineState,\n                state: STATE_LOADING\n            };\n        }\n        case TIMELINE_SUCCESS: {\n            const {result} = payload;\n            return {\n                ...result,\n                state: STATE_SUCCESS\n            };\n        }\n        case TIMELINE_FAIL: {\n            const {code} = payload;\n            return {\n                ...timelineState,\n                state: code\n            };\n        }\n        default:\n            return timelineState;\n    }\n}\n\nexport const getTweetsReducer = (tweetsState = createDefault(), action) =>{\n    return generalReducer(tweetsState,action,[GET_TWEETS_INIT,GET_TWEETS_SUCCESS,GET_TWEETS_FAIL])\n}\n\nexport const deleteTweetReducer = (deleteTweetState = initDeleteTweet, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case DEL_TWEET_INIT:{\n            return {\n                ...deleteTweetState,\n                state: STATE_LOADING\n            };\n        }\n        case DEL_TWEET_SUCCESS:{\n            const {result} = payload;\n            return {\n                ...result,\n                state: STATE_SUCCESS\n            };\n        }\n        case DEL_TWEET_FAIL:{\n            const {code} = payload;\n            return {\n                ...deleteTweetState,\n                state: code\n            };\n        }\n        default:\n            return deleteTweetState;\n    }\n};\n\nexport const getTweetReducer = (getTweetState = initGetTweet, action) => {\n    return generalReducer(getTweetState, action, [GET_TWEET_INIT, GET_TWEET_SUCCESS, GET_TWEET_FAIL]);\n};\n\nexport const getLikeRetTweetReducer = (likeRetTweetState = initLikeRetTweet, action) => {\n    return generalReducer(likeRetTweetState, action,\n        [GET_LIKE_RET_TWEET_INIT, GET_LIKE_RET_TWEET_SUCCESS, GET_LIKE_RET_TWEET_FAIL]);\n};\n\nexport const tweetActionsReducer = (tweetActionsReducer = createDefault(), action) =>{\n    return generalReducer(tweetActionsReducer, action, [TWEET_ACTION_INIT, TWEET_ACTION_SUCCESS, TWEET_ACTION_FAIL]);\n}\n\nexport const updateProfileReducer = (updateProfileState = createDefault(), action) => {\n    return generalReducer(updateProfileState, action, [UPDATE_PROFILE_INIT, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL]);\n};\n\nexport const updateUserReducer = (updateUserState = createDefault(), action) => {\n    return generalReducer(updateUserState, action, [UPDATE_USER_INIT, UPDATE_USER_SUCCESS, UPDATE_USER_FAIL]);\n};\n\nexport const followReducer = (followState = createDefault(), action) => {\n    return generalReducer(followState, action, [FOLLOW_INIT, FOLLOW_SUCCESS, FOLLOW_FAIL]);\n};\n\nexport const unfollowReducer = (unfollowState = createDefault(), action) => {\n    return generalReducer(unfollowState, action, [UNFOLLOW_INIT, UNFOLLOW_SUCCESS, UNFOLLOW_FAIL]);\n};\n\nexport const followListReducer = (followListState = createDefault(), action) => {\n    return generalReducer(followListState, action, [FOLLOW_LIST_INIT, FOLLOW_LIST_SUCCESS, FOLLOW_LIST_FAIL]);\n};\n\nexport const logsReducer = (logsState = createDefault(), action) => {\n    return generalReducer(logsState, action, [LOGS_INIT, LOGS_SUCCESS, LOGS_FAIL]);\n};\n\nexport const searchReducer = (searchState = createDefault(), action) => {\n    return generalReducer(searchState, action, [SEARCH_INIT, SEARCH_SUCCESS, SEARCH_FAIL]);\n};\n\nexport const notificationsReducer = (notificationsState = createDefault(), action) => {\n    return generalReducer(notificationsState, action, [NOTIFICATIONS_INIT, NOTIFICATIONS_SUCCESS, NOTIFICATIONS_FAIL]);\n};\n\nexport const suggestionReducer = (suggestionState = createDefault(), action) => {\n    return generalReducer(suggestionState, action, [SUGGESTION_INIT, SUGGESTION_SUCCESS, SUGGESTION_FAIL]);\n};\n","import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport {persistReducer} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage'\nimport {autoMergeLevel2} from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport {authReducer as user, profileReducer as profile} from \"./reducers\";\nimport {createTweetReducer as createTweet} from \"./reducers\";\nimport {timelineReducer as timeline} from \"./reducers\";\nimport {deleteTweetReducer as deleteTweet} from \"./reducers\";\nimport {trendsReducer as trends} from \"./reducers\";\nimport {getTweetReducer as getTweet} from \"./reducers\";\nimport {getLikeRetTweetReducer as likeRetTweet} from \"./reducers\";\nimport {tweetActionsReducer as tweetAction} from \"./reducers\";\nimport {updateProfileReducer as updateProfile} from \"./reducers\";\nimport {updateUserReducer as updateUser} from \"./reducers\";\nimport {followReducer as follow} from \"./reducers\";\nimport {unfollowReducer as unfollow} from \"./reducers\";\nimport {followListReducer as followList} from \"./reducers\";\nimport {getTweetsReducer as getTweets} from \"./reducers\";\nimport {logsReducer as logs} from \"./reducers\";\nimport {searchReducer as search} from \"./reducers\";\nimport {notificationsReducer as notifications} from \"./reducers\";\nimport {suggestionReducer as suggestion} from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst reducers = combineReducers({\n    user,\n    createTweet,\n    profile,\n    timeline,\n    getTweets,\n    deleteTweet,\n    getTweet,\n    likeRetTweet,\n    trends,\n    tweetAction,\n    updateProfile,\n    updateUser,\n    follow,\n    unfollow,\n    followList,\n    logs,\n    search,\n    notifications,\n    suggestion,\n});\n\nconst persistConfig = {\n    key: 'twitter',\n    blacklist: [\n        'createTweet',\n        'profile',\n        'timeline',\n        'getTweets',\n        'deleteTweet',\n        'getTweet',\n        'likeRetTweet',\n        'tweetAction',\n        'trends',\n        'updateProfile',\n        'updateUser',\n        'follow',\n        'unfollow',\n        'followList',\n        'logs',\n        'search',\n        'notifications',\n        'suggestion',\n    ],\n    storage,\n    stateReconciler : autoMergeLevel2\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nconst devTool = composeWithDevTools(applyMiddleware(thunk));\nexport const getStore = () => createStore(persistedReducer, devTool);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {PersistGate} from 'redux-persist/lib/integration/react';\nimport {getStore} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {persistStore} from \"redux-persist\";\n\n\nconst store = getStore();\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <PersistGate\n                loading={<div>Loading...</div>}\n                persistor={persistor}>\n                <App/>\n            </PersistGate>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n","import {BASE_URL, STATE_LOADING, STATE_SUCCESS} from \"./actions\";\n\n\nexport const isStatePresent = parent => parent.state === STATE_SUCCESS\nexport const isStateLoading = parent => parent.state === STATE_LOADING;\nexport const isStateFailed = parent => parent.state >= 1;\n\n\nexport const createInit = (type) => ({\n    type: type,\n    payload: {\n        code: STATE_LOADING\n    }\n});\n\nexport const createSuccess = (type, result) => ({\n    type: type,\n    payload: {\n        code: STATE_SUCCESS,\n        result: result\n    }\n});\n\nexport const createFail = (type,failCode) => ({\n    type: type,\n    payload: {\n        code: failCode\n    }\n});\n\n\nexport const getUserProfileImg = (link) => `${BASE_URL}/${link}`;","import axios from \"axios\";\nimport {createFail, createInit, createSuccess, isStatePresent} from \"./stateUtils\";\n\nexport const STATE_NULL = -1;\nexport const STATE_LOADING = 0;\nexport const STATE_SUCCESS = 1;\nexport const BASE_URL = \"https://immense-earth-01771.herokuapp.com\";\n\n// ****************** SIGN UP ************************\nexport const SIGNUP_INIT = \"SIGN_UP_INIT\";\nexport const SIGNUP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGNUP_FAIL = \"SIGN_UP_FAIL\";\n\nexport const signup = (user) => async (dispatch, getState) => {\n    dispatch(createInit(SIGNUP_INIT));\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: '/signup',\n        contentType: 'application/json',\n        data: {\n            user: {\n                name: `${user.firstName} ${user.lastName}`,\n                username: user.username,\n                email: user.email,\n                password: user.password\n            }\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.user\n            };\n            dispatch(createSuccess(SIGNUP_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(SIGNUP_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** SIGN IN ************************\nexport const SIGNIN_INIT = \"SIGNIN_INIT\";\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\nexport const SIGNIN_FAIL = \"SIGNIN_FAIL\";\n\nexport const signin = (user) => async (dispatch, getState) => {\n    dispatch(createInit(SIGNIN_INIT));\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: '/login',\n        contentType: 'application/json',\n        accept: '*/*',\n        data: {\n            user: {\n            \tusername: user.username,\n            \tname: user.name,\n                email: user.email,\n                password: user.password\n            }\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.user\n            }\n            dispatch(createSuccess(SIGNIN_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(SIGNIN_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** LOGOUT ************************\nexport const LOGOUT = \"LOGOUT\";\nexport const logoutUser = () => ({\n\ttype: LOGOUT\n});\n\n// ****************** CREATE TWEET ************************\nexport const CREATE_TWEET_INIT = \"CREATE_TWEET_INIT\";\nexport const CREATE_TWEET_SUCCESS = \"CREATE_TWEET_SUCCESS\";\nexport const CREATE_TWEET_FAIL = \"CREATE_TWEET_FAIL\";\nexport const createTweet = (tweet, fallback = \"\", props = {}) => async (dispatch, getState) => {\n    dispatch(createInit(CREATE_TWEET_INIT));\n    const {user} = getState();\n\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"text\", tweet.text);\n    if (tweet.media != null) bodyFormData.append(\"media\", tweet.media);\n    if (tweet.parent != null) bodyFormData.append(\"parent\", tweet.parent);\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: '/tweets',\n        data: bodyFormData,\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(CREATE_TWEET_SUCCESS,result));\n\t        console.log(\"fallback and shit: \", fallback, props);\n            if (fallback === \"detail\" && \"id\" in props) dispatch(getTweet(props.id));\n            else if (fallback === \"timeline\") dispatch(getTimeline());\n            else if (fallback === \"profile\" && \"target\" in props) dispatch(getProfile(user.token, props.target));\n            else if (fallback === \"explore\" && \"type\" in props && \"query\" in props) dispatch(search(props.type, props.query));\n            else if (tweet.parent != null) dispatch(getTweet(tweet.parent));\n            else dispatch(getTimeline());\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(CREATE_TWEET_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** DELETE TWEET ************************\nexport const DEL_TWEET_INIT = \"DEL_TWEET_INIT\";\nexport const DEL_TWEET_SUCCESS = \"DEL_TWEET_SUCCESS\";\nexport const DEL_TWEET_FAIL = \"DEL_TWEET_FAIL\";\nexport const deleteTweet = (tweetId, loc) => async (dispatch, getState) => {\n    dispatch(createInit(DEL_TWEET_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'delete',\n        url: `/tweets/${tweetId}`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(DEL_TWEET_SUCCESS,result));\n            loc === \"timeline\" ? dispatch(getTimeline()) : dispatch(getProfile(user.token, user.username));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(DEL_TWEET_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** GET TWEET ************************\nexport const GET_TWEET_INIT = \"GET_TWEET_INIT\";\nexport const GET_TWEET_SUCCESS = \"GET_TWEET_SUCCESS\";\nexport const GET_TWEET_FAIL = \"GET_TWEET_FAIL\";\nexport const getTweet = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(GET_TWEET_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'get',\n        url: `/tweets/${tweetId}`,\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(GET_TWEET_SUCCESS,result));\n            dispatch(getLikeRetTweet(tweetId));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(GET_TWEET_FAIL,getErrorCode(error)));\n        });\n};\n\nexport const TWEET_ACTION_INIT = \"TWEET_ACTION_INIT\";\nexport const TWEET_ACTION_SUCCESS = \"TWEET_ACTION_SUCCESS\";\nexport const TWEET_ACTION_FAIL = \"TWEET_ACTION_FAIL\";\n\n// ****************** LIKE TWEET ************************\nexport const LIKE_TWEET_INIT = \"LIKE_TWEET_INIT\";\nexport const LIKE_TWEET_SUCCESS = \"LIKE_TWEET_SUCCESS\";\nexport const LIKE_TWEET_FAIL = \"LIKE_TWEET_FAIL\";\nexport const likeTweet = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(TWEET_ACTION_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: `/tweets/${tweetId}/like`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(TWEET_ACTION_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TWEET_ACTION_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** DELETE LIKE TWEET ************************\nexport const UNLIKE_TWEET_INIT = \"UNLIKE_TWEET_INIT\";\nexport const UNLIKE_TWEET_SUCCESS = \"UNLIKE_TWEET_SUCCESS\";\nexport const UNLIKE_TWEET_FAIL = \"UNLIKE_TWEET_FAIL\";\nexport const deleteLike = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(TWEET_ACTION_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'delete',\n        url: `/tweets/${tweetId}/like`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(TWEET_ACTION_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TWEET_ACTION_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** RETWEET TWEET ************************\nexport const RETWEET_INIT = \"RETWEET_INIT\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAIL = \"RETWEET_FAIL\";\nexport const retweet = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(TWEET_ACTION_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: `/tweets/${tweetId}/retweet`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(TWEET_ACTION_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TWEET_ACTION_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** DELETE RETWEET TWEET ************************\nexport const DEL_RETWEET_INIT = \"DEL_RETWEET_INIT\";\nexport const DEL_RETWEET_SUCCESS = \"DEL_RETWEET_SUCCESS\";\nexport const DEL_RETWEET_FAIL = \"DEL_RETWEET_FAIL\";\nexport const deleteRetweet = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(TWEET_ACTION_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'delete',\n        url: `/tweets/${tweetId}/retweet`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.tweet\n            }\n            dispatch(createSuccess(TWEET_ACTION_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TWEET_ACTION_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** GET TIMELINE ************************\n\nexport const TIMELINE_INIT = \"TIMELINE_INIT\";\nexport const TIMELINE_SUCCESS = \"TIMELINE_SUCCESS\";\nexport const TIMELINE_FAIL = \"TIMELINE_FAIL\";\nexport const getTimeline = (dateCode=0) => async (dispatch, getState) => {\n    dispatch(createInit(TIMELINE_INIT));\n    const {user} = getState();\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'get',\n        url: `/home/${dateCode}`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data\n            }\n            dispatch(createSuccess(TIMELINE_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TIMELINE_FAIL,getErrorCode(error)));\n        });\n}\n\n// ****************** GET Tweets ************************\n\nexport const GET_TWEETS_INIT = \"GET_TWEETS_INIT\";\nexport const GET_TWEETS_SUCCESS = \"GET_TWEETS_SUCCESS\";\nexport const GET_TWEETS_FAIL = \"GET_TWEETS_FAIL\";\nexport const getTweets = (tweetsIds) => async (dispatch, getState) => {\n    dispatch(createInit(GET_TWEETS_INIT));\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: `/tweets/get`,\n        data: {\n            tweets: tweetsIds\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data\n            }\n            dispatch(createSuccess(GET_TWEETS_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(GET_TWEETS_FAIL,getErrorCode(error)));\n        });\n}\n\n// ****************** GET PROFILE ************************\n\nexport const GET_PROFILE_INIT = \"GET_PROFILE_INIT\";\nexport const getUserProfileInit = () => ({\n\ttype: GET_PROFILE_INIT,\n\tpayload: {\n\t\tcode: STATE_LOADING,\n\t}\n});\n\nexport const GET_PROFILE_SUCCESS = \"GET_PROFILE_SUCCESS\";\nexport const getUserProfileSuccess = result => ({\n\ttype: GET_PROFILE_SUCCESS,\n\tpayload: {\n\t\tcode: STATE_SUCCESS,\n\t\tprofile: result,\n\t}\n});\n\nexport const GET_PROFILE_FAIL = \"GET_PROFILE_FAIL\";\nexport const getUserProfileFail = code => ({\n\ttype: GET_PROFILE_FAIL,\n\tpayload: {\n\t\tcode: code,\n\t}\n});\n\nexport const getProfile = (username) => async (dispatch, getState) => {\n    dispatch(getUserProfileInit());\n    const {user} = getState();\n    let config = {\n        baseURL: BASE_URL,\n        method: 'get',\n        url: '/profiles/' + username,\n        contentType: 'application/json',\n    };\n\n    if (isStatePresent(user)) config = {\n        ...config,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    }\n\n    await axios(config).then(value => {\n        const result = {\n            profile: value.data.profile,\n        }\n        dispatch(getUserProfileSuccess(result));\n        dispatch(getTweets(result.profile.tweets));\n    }).catch(error => {\n        printError(error);\n        dispatch(getUserProfileFail(getErrorCode(error)));\n    });\n};\n\n\n// ****************** UPDATE PROFILE ************************\nexport const UPDATE_PROFILE_INIT = \"UPDATE_PROFILE_INIT\";\nexport const UPDATE_PROFILE_SUCCESS = \"UPDATE_PROFILE_SUCCESS\";\nexport const UPDATE_PROFILE_FAIL = \"UPDATE_PROFILE_FAIL\";\nexport const updateProfile = (profile) => async (dispatch, getState) => {\n    dispatch(createInit(UPDATE_PROFILE_INIT));\n    const {user} = getState();\n\n    const bodyFormData = new FormData();\n    if (profile.name != null) bodyFormData.append(\"name\", profile.name);\n    if (profile.bio != null) bodyFormData.append(\"bio\", profile.bio);\n    if (profile.profilePicture != null) bodyFormData.append(\"profile_picture\", profile.profilePicture);\n    if (profile.header != null) bodyFormData.append(\"header_picture\", profile.header);\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'put',\n        url: `/profiles/${user.username}`,\n        data: bodyFormData,\n        headers: {\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.profile\n            }\n            dispatch(createSuccess(UPDATE_PROFILE_SUCCESS,result));\n            dispatch(getProfile(user.username));\n            dispatch(updateProfilePic(result.profile_picture));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(UPDATE_PROFILE_FAIL,error.response.status));\n        });\n};\n\nexport const updateProfilePic = (profilePic) => async (dispatch, getState) => {\n    const {user} = getState();\n    const result = {\n        ...user,\n        profile_picture : profilePic\n    }\n    dispatch(createSuccess(SIGNIN_SUCCESS, result));\n};\n\n// ****************** UPDATE USER ************************\nexport const UPDATE_USER_INIT = \"UPDATE_USER_INIT\";\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\";\n\nexport const updateUser = (updatedUser) => async (dispatch, getState) => {\n    dispatch(createInit(UPDATE_USER_INIT));\n    const {user} = getState();\n    await axios({\n        baseURL: BASE_URL,\n        method: 'put',\n        url: `/user/${user.username}`,\n        data: {\n            user: {\n                username: updatedUser.username,\n                email: updatedUser.email,\n                password: updatedUser.password\n            }\n        },\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.user\n            };\n            dispatch(createSuccess(UPDATE_USER_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(UPDATE_USER_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** FOLLOW ************************\nexport const FOLLOW_INIT = \"FOLLOW_INIT\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAIL = \"FOLLOW_FAIL\";\n\nexport const follow = (username) => async (dispatch, getState) => {\n    dispatch(createInit(FOLLOW_INIT));\n    const {user} = getState();\n    await axios({\n        baseURL: BASE_URL,\n        method: 'post',\n        url: `/profiles/${username}/follow`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.profile\n            };\n            dispatch(createSuccess(FOLLOW_SUCCESS, result));\n            dispatch(getProfile(username));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(FOLLOW_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** UNFOLLOW ************************\nexport const UNFOLLOW_INIT = \"UNFOLLOW_INIT\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAIL = \"UNFOLLOW_FAIL\";\n\nexport const unfollow = (username) => async (dispatch, getState) => {\n    dispatch(createInit(UNFOLLOW_INIT));\n    const {user} = getState();\n    await axios({\n        baseURL: BASE_URL,\n        method: 'delete',\n        url: `/profiles/${username}/follow`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data.profile\n            };\n            dispatch(createSuccess(UNFOLLOW_SUCCESS, result));\n            dispatch(getProfile(username));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(UNFOLLOW_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** FOLLOWING FOLLOWER LIST ************************\nexport const FOLLOW_LIST_INIT = \"FOLLOW_LIST_INIT\";\nexport const FOLLOW_LIST_SUCCESS = \"FOLLOW_LIST_SUCCESS\";\nexport const FOLLOW_LIST_FAIL = \"FOLLOW_LIST_FAIL\";\n\nexport const followList = (username) => async (dispatch, getState) => {\n    dispatch(createInit(FOLLOW_LIST_INIT));\n    const {user} = getState();\n\n    let config = {\n        baseURL: BASE_URL,\n        method: 'get',\n        url: `/profiles/${username}/list`,\n        contentType: 'application/json',\n    };\n\n    if (isStatePresent(user)) config = {\n        ...config,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    }\n\n    await axios(config)\n        .then(value => {\n            const result = {\n                ...value.data\n            };\n            dispatch(createSuccess(FOLLOW_LIST_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(FOLLOW_LIST_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** LOGS LIST ************************\nexport const LOGS_INIT = \"LOGS_INIT\";\nexport const LOGS_SUCCESS = \"LOGS_SUCCESS\";\nexport const LOGS_FAIL = \"LOGS_FAIL\";\n\nexport const logs = (username) => async (dispatch, getState) => {\n\tdispatch(createInit(LOGS_INIT));\n\tconst {user} = getState();\n\tawait axios({\n\t    baseURL: BASE_URL,\n\t    method: 'get',\n\t    url: `/profiles/${username}/logs`,\n\t    headers: {\n\t        \"Authorization\": `Token ${user.token}`\n\t    }\n\t})\n\t    .then(value => {\n\t        const result = {\n\t            ...value.data\n\t        };\n\t        dispatch(createSuccess(LOGS_SUCCESS, result));\n\t    })\n\t    .catch(error => {\n\t        printError(error);\n\t        dispatch(createFail(LOGS_FAIL, getErrorCode(error)));\n\t    });\n};\n\n// ****************** SEARCH *************************************\nexport const SEARCH_INIT = \"SEARCH_INIT\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\n\nexport const search = (type, query) => async (dispatch, getState) => {\n    dispatch(createInit(SEARCH_INIT));\n\tconst {user} = getState();\n    await axios({\n        baseURL: BASE_URL,\n        method: type === \"tweet\" ? \"post\" : \"get\",\n        url: type === \"hashtag\" ? `/search/hashtag?query=${query}` :\n            type === \"user\" ? `/search/username?query=${query}` : `/search/tweet`,\n        data: type === \"tweet\" ? {\"query\": query} : null,\n\t    headers: {\n\t\t    \"Authorization\": \"token\" in user ? `Token ${user.token}` : \"\",\n\t    },\n    })\n        .then(value => {\n            const result = {\n                ...value.data\n            };\n            dispatch(createSuccess(SEARCH_SUCCESS, result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(SEARCH_FAIL, getErrorCode(error)));\n        });\n};\n\n// ******************** NOTIFICATION LIST **************************\nexport const NOTIFICATIONS_INIT = \"NOTIFICATION_INIT\";\nexport const NOTIFICATIONS_SUCCESS = \"NOTIFICATION_SUCCESS\";\nexport const NOTIFICATIONS_FAIL = \"NOTIFICATION_FAIL\";\n\nexport const notificationList = () => async (dispatch, getState) => {\n\tdispatch(createInit(NOTIFICATIONS_INIT));\n\tconst {user} = getState();\n\tawait axios({\n\t\tbaseURL: BASE_URL,\n\t\tmethod: \"get\",\n\t\turl: `/profiles/${user.username}/notifications`,\n\t\theaders: {\n\t\t\t\"Authorization\": `Token ${user.token}`\n\t\t},\n\t})\n\t\t.then(value => {\n\t\t\tconst result = {\n\t\t\t\t...value.data,\n\t\t\t};\n\t\t\tconsole.log(result);\n\t\t\tdispatch(createSuccess(NOTIFICATIONS_SUCCESS, result));\n\t\t})\n\t\t.catch(error => {\n\t\t\tprintError(error);\n\t\t\tdispatch(createFail(NOTIFICATIONS_FAIL, getErrorCode(error)));\n\t\t});\n};\n\n// ********************* SUGGESTION LIST **************************\nexport const SUGGESTION_INIT = \"SUGGESTION_INIT\";\nexport const SUGGESTION_SUCCESS = \"SUGGESTION_SUCCESS\";\nexport const SUGGESTION_FAIL = \"SUGGESTION_FAIL\";\n\nexport const suggestionList = () => async (dispatch, getState) => {\n    dispatch(createInit(SUGGESTION_INIT));\n    const {user} = getState();\n    await axios({\n        baseURL: BASE_URL,\n        method: \"get\",\n        url: `/suggestions`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        },\n    })\n        .then(value => {\n            const result = {\n                ...value.data,\n            };\n            dispatch(createSuccess(SUGGESTION_SUCCESS, result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(SUGGESTION_FAIL, getErrorCode(error)));\n        });\n};\n\n// ****************** GET LIKE RETWEET of TWEET ************************\nexport const GET_LIKE_RET_TWEET_INIT = \"GET_LIKE_RET_TWEET_INIT\";\nexport const GET_LIKE_RET_TWEET_SUCCESS = \"GET_LIKE_RET_TWEET_SUCCESS\";\nexport const GET_LIKE_RET_TWEET_FAIL = \"GET_LIKE_RET_TWEET_FAIL\";\nexport const getLikeRetTweet = (tweetId) => async (dispatch, getState) => {\n    dispatch(createInit(GET_LIKE_RET_TWEET_INIT));\n    const {user} = getState();\n    \n    await axios({\n        baseURL: BASE_URL,\n        method: 'get',\n        url: `/tweets/${tweetId}/list`,\n        headers: {\n            \"Authorization\": `Token ${user.token}`\n        }\n    })\n        .then(value => {\n            const result = {\n                ...value.data\n            }\n            dispatch(createSuccess(GET_LIKE_RET_TWEET_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(GET_LIKE_RET_TWEET_FAIL,getErrorCode(error)));\n        });\n};\n\n// ****************** GET TRENDS ************************\nexport const TRENDS_INIT = \"TRENDS_INIT\";\nexport const TRENDS_SUCCESS = \"TRENDS_SUCCESS\";\nexport const TRENDS_FAIL = \"TRENDS_FAIL\";\nexport const getTrends = () => async (dispatch, getState) => {\n    dispatch(createInit(TRENDS_INIT));\n\n    await axios({\n        baseURL: BASE_URL,\n        method: 'get',\n        url: `/trends`,\n    })\n        .then(value => {\n            const result = {\n                ...value.data\n            }\n            dispatch(createSuccess(TRENDS_SUCCESS,result));\n        })\n        .catch(error => {\n            printError(error);\n            dispatch(createFail(TRENDS_FAIL,getErrorCode(error)));\n        });\n}\n\nfunction printError(error) {\n\tif (error.response) {\n\t\t// The request was made and the server responded with a status code\n\t\t// that falls out of the range of 2xx\n\t\tconsole.log(error.response.data);\n\t\tconsole.log(error.response.status);\n\t\tconsole.log(error.response.headers);\n\t} else if (error.request) {\n\t\t// The request was made but no response was received\n\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t// http.ClientRequest in node.js\n\t\tconsole.log(error.request);\n\t} else {\n\t\t// Something happened in setting up the request that triggered an Error\n\t\tconsole.log('Error', error.message);\n\t}\n\tconsole.log(error.config);\n}\n\nfunction getErrorCode(error) {\n    if (error.response) return error.response.status;\n    else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n        return 1000;\n    } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n        return 2000;\n    }\n}\n"],"sourceRoot":""}